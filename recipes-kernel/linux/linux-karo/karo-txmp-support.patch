Index: karo-tx-linux/arch/arm/boot/dts/stm32mp153a-txmp-1531.dts
===================================================================
--- /dev/null
+++ karo-tx-linux/arch/arm/boot/dts/stm32mp153a-txmp-1531.dts
@@ -0,0 +1,599 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) STMicroelectronics 2019 - All Rights Reserved
+ * Author: STM32CubeMX code generation for STMicroelectronics.
+ */
+
+/dts-v1/;
+
+#include <dt-bindings/clock/stm32mp1-clks.h>
+#include <dt-bindings/gpio/gpio.h>
+
+#include "stm32mp157c.dtsi"
+#include "stm32mp157c-m4-srm.dtsi"
+#include "stm32mp157cab-pinctrl.dtsi"
+#include "stm32mp15-ddr.dtsi"
+
+/ {
+	model = "Ka-Ro electronics GmbH TXMP-1531 module";
+	compatible = "st,stm32mp153a-txmp-1531", "st,stm32mp153";
+
+	aliases {
+		ethernet0 = &ethernet0;
+		mmc0 = &sdmmc2;
+		mmc1 = &sdmmc3;
+		mmc2 = &sdmmc1;
+		spinor0 = &flash0;
+		serial0 = &uart4;
+		serial1 = &uart7;
+		serial2 = &uart5;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	lcd_backlight: lcd-backlight {
+		compatible = "gpio-backlight";
+		gpios = <&gpioa 10 GPIO_ACTIVE_LOW>;
+		default-on;
+	};
+
+	leds {
+		compatible = "gpio-leds";
+
+		module_led {
+			gpios = <&gpioe 4 GPIO_ACTIVE_HIGH>;
+			label = "Heartbeat";
+			linux,default-trigger = "heartbeat";
+		};
+	};
+
+	reg_3v3: regulator-3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+	};
+
+	soc {
+		etzpc: etzpc@5c007000 {
+			compatible = "st,stm32mp1-etzpc";
+			reg = <0x5c007000 0x400>;
+			clocks = <&rcc TZPC>;
+			status = "okay";
+			secure-status = "okay";
+		};
+
+		stgen: stgen@5c008000 {
+			compatible = "st,stm32-stgen";
+			reg = <0x5c008000 0x1000>;
+			status = "okay";
+		};
+	};
+
+	usb_phy_tuning: usb-phy-tuning {
+		st,hs-dc-level = <2>;
+		st,fs-rftime-tuning;
+		st,hs-rftime-reduction;
+		st,hs-current-trim = <15>;
+		st,hs-impedance-trim = <1>;
+		st,squelch-level = <3>;
+		st,hs-rx-offset = <2>;
+		st,no-lsfs-sc;
+	};
+};
+
+&adc {
+	vdda-supply = <&reg_3v3>;
+	vref-supply = <&reg_3v3>;
+	status = "okay";
+};
+
+&adc2 {
+	status = "okay";
+};
+
+&adc_temp {
+	status = "okay";
+};
+
+&bsec {
+	status = "okay";
+	secure-status = "okay";
+};
+
+&clk_lse {
+	status = "disabled";
+};
+
+&ethernet0 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&ethernet0_rmii_pins>;
+	pinctrl-1 = <&ethernet0_rmii_pins_sleep>;
+	phy-mode = "rmii";
+	max-speed = <100>;
+	phy-handle = <&phy0>;
+	clock-names = "stmmaceth", "mac-clk-tx", "mac-clk-rx",
+		      "ethstp", "syscfg-clk", "eth-ck";
+	clocks = <&rcc ETHMAC &rcc ETHTX &rcc ETHRX
+		  &rcc ETHSTP &rcc SYSCFG &rcc ETHCK_K>;
+	st,eth_ref_clk_sel;
+	status = "okay";
+
+	mdio0 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		compatible = "snps,dwmac-mdio";
+		reset-gpios = <&gpioa 14 GPIO_ACTIVE_LOW>;
+
+		phy0: ethernet-phy@0 {
+			//compatible = "ethernet-phy-ieee802.3-c22";
+			reg = <0>;
+			interrupt-parent = <&gpioa>;
+			interrupts = <13 IRQ_TYPE_EDGE_FALLING>;
+			smsc,disable-energy-detect;
+		};
+	};
+};
+
+&i2c5 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&txmp_i2c5_pins>;
+	pinctrl-1 = <&txmp_i2c5_sleep_pins>;
+};
+
+&iwdg2 {
+	timeout-sec = <32>;
+	status = "okay";
+};
+
+&qspi {
+	pinctrl-names = "default";
+	pinctrl-0 = <&quadspi_pins_mx>;
+	reg = <0x58003000 0x1000>, <0x70000000 0x1000000>;
+	status = "okay";
+
+	flash0: gd25q16c@0 {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "gd25q16c", "spi-flash";
+		reg = <0>;
+		spi-rx-bus-width = <2>;
+		spi-max-frequency = <104000000>;
+		memory-map = <0x90000000 0x1000000>;
+	};
+};
+
+&rtc {
+	status = "okay";
+	secure-status = "okay";
+};
+
+&sdmmc2 {
+	/* eMMC */
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc2_pins_mx>;
+	pinctrl-1 = <&sdmmc2_pins_opendrain_mx>;
+	pinctrl-2 = <&sdmmc2_pins_sleep_mx>;
+	bus-width = <4>;
+	vmmc-supply = <&reg_3v3>;
+	no-1-8-v;
+	no-sd;
+	no-sdio;
+	st,neg-edge;
+	non-removable;
+	status = "okay";
+};
+
+&sdmmc3 {
+	/* SD card slot */
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc3_pins_mx>;
+	pinctrl-1 = <&sdmmc3_opendrain_pins_mx>;
+	pinctrl-2 = <&sdmmc3_sleep_pins_mx>;
+	cd-gpios = <&gpioc 11 GPIO_ACTIVE_LOW>;
+	bus-width = <4>;
+	vmmc-supply = <&reg_3v3>;
+	no-1-8-v;
+	st,neg-edge;
+//	st,sig-dir;
+	st,use-ckin;
+	status = "okay";
+};
+
+&uart4 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&txmp_uart4_pins>;
+	pinctrl-1 = <&txmp_uart4_sleep_pins>;
+	status = "okay";
+};
+
+&uart5 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&txmp_uart5_pins>;
+	pinctrl-1 = <&txmp_uart5_sleep_pins>;
+	status = "okay";
+};
+
+&uart7 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&txmp_uart7_pins>;
+	pinctrl-1 = <&txmp_uart7_sleep_pins>;
+	status = "okay";
+};
+
+&usbh_ehci {
+	phy-names = "usb";
+	phys = <&usbphyc_port0>;
+	status = "okay";
+};
+
+&usbotg_hs {
+	dr_mode = "peripheral";
+	phys = <&usbphyc_port1 0>;
+	phy-names = "usb2-phy";
+	status = "okay";
+};
+
+&usbphyc {
+	vdd3v3-supply = <&reg_3v3>;
+	status = "okay";
+};
+
+&usbphyc_port0 {
+	status = "okay";
+};
+
+&usbphyc_port1 {
+	status = "okay";
+};
+
+&pinctrl {
+	ethernet0_rmii_pins: ethernet0-rmii-pins {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('G', 8, AF2)	/* ETH_CLK */
+				  STM32_PINMUX('C', 1, AF11)	/* ETH_MDC */
+				  STM32_PINMUX('A', 2, AF11)	/* ETH_MDIO */
+				  STM32_PINMUX('B', 11, AF11)	/* ETH_RMII_TX_EN */
+				  STM32_PINMUX('G', 13, AF11)	/* ETH_RMII_TXD0 */
+				  STM32_PINMUX('G', 14, AF11)	/* ETH_RMII_TXD1 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+
+		pins2 {
+			pinmux = <
+				  STM32_PINMUX('C', 4, AF11)	/* ETH_RMII_RXD0 */
+				  STM32_PINMUX('C', 5, AF11)	/* ETH_RMII_RXD1 */
+				  STM32_PINMUX('A', 7, AF11)	/* ETH_RMII_CRS_DV */
+			>;
+			bias-disable;
+		};
+	};
+
+	ethernet0_rmii_pins_sleep: rmii-pins-sleep {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('G', 8, ANALOG)	/* ETH_CLK */
+				  STM32_PINMUX('G', 13, ANALOG)	/* ETH_RMII_TXD0 */
+				  STM32_PINMUX('G', 14, ANALOG)	/* ETH_RMII_TXD1 */
+				  STM32_PINMUX('B', 11, ANALOG)	/* ETH_RMII_TX_EN */
+				  STM32_PINMUX('A', 2, ANALOG)	/* ETH_MDIO */
+				  STM32_PINMUX('C', 1, ANALOG)	/* ETH_MDC */
+				  STM32_PINMUX('C', 4, ANALOG)	/* ETH_RMII_RXD0 */
+				  STM32_PINMUX('C', 5, ANALOG)	/* ETH_RMII_RXD1 */
+				  STM32_PINMUX('A', 7, ANALOG)	/* ETH_RMII_CRS_DV */
+			>;
+		};
+	};
+
+	quadspi_pins_mx: quadspi-pins-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('B', 6, AF10)	/* QUADSPI_BK1_NCS */
+				  STM32_PINMUX('F', 9, AF10)	/* QUADSPI_BK1_IO1 */
+				  STM32_PINMUX('F', 8, AF10)	/* QUADSPI_BK1_IO0 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('F', 10, AF9)>; /* QUADSPI_CLK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+	};
+
+	sdmmc2_pins_mx: sdmmc2-pins-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('B', 3, AF9)	/* SDMMC2_D2 */
+				  STM32_PINMUX('B', 4, AF9)	/* SDMMC2_D3 */
+				  STM32_PINMUX('B', 14, AF9)	/* SDMMC2_D0 */
+				  STM32_PINMUX('B', 15, AF9)	/* SDMMC2_D1 */
+				  STM32_PINMUX('G', 6, AF10)	/* SDMMC2_CMD */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc2_pins_opendrain_mx: sdmmc2-pins-opendrain-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('G', 6, AF10)	/* SDMMC2_CMD */
+			>;
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <
+				  STM32_PINMUX('B', 3, AF9)	/* SDMMC2_D2 */
+				  STM32_PINMUX('B', 4, AF9)	/* SDMMC2_D3 */
+				  STM32_PINMUX('B', 14, AF9)	/* SDMMC2_D0 */
+				  STM32_PINMUX('B', 15, AF9)	/* SDMMC2_D1 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins3 {
+			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc2_pins_sleep_mx: sdmmc2-pins-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('B', 3, ANALOG)	/* SDMMC2_D2 */
+				  STM32_PINMUX('B', 4, ANALOG)	/* SDMMC2_D3 */
+				  STM32_PINMUX('B', 14, ANALOG)	/* SDMMC2_D0 */
+				  STM32_PINMUX('B', 15, ANALOG)	/* SDMMC2_D1 */
+				  STM32_PINMUX('G', 6, ANALOG)	/* SDMMC2_CMD */
+				  STM32_PINMUX('E', 3, ANALOG)	/* SDMMC2_CK */
+			>;
+		};
+	};
+
+	sdmmc3_pins_mx: sdmmc3-pins-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('D', 0, AF10)	/* SDMMC3_CMD */
+				  STM32_PINMUX('D', 1, AF10)	/* SDMMC3_D0 */
+				  STM32_PINMUX('D', 4, AF10)	/* SDMMC3_D1 */
+				  STM32_PINMUX('D', 5, AF10)	/* SDMMC3_D2 */
+				  STM32_PINMUX('D', 7, AF10)	/* SDMMC3_D3 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+	};
+
+	sdmmc3_opendrain_pins_mx: sdmmc3-opendrain-mx {
+		pins1 {
+			pinmux = <STM32_PINMUX('D', 0, AF10)>; /* SDMMC3_CMD */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <
+				  STM32_PINMUX('D', 1, AF10) /* SDMMC3_D0 */
+				  STM32_PINMUX('D', 4, AF10) /* SDMMC3_D1 */
+				  STM32_PINMUX('D', 5, AF10) /* SDMMC3_D2 */
+				  STM32_PINMUX('D', 7, AF10) /* SDMMC3_D3 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins3 {
+			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc3_sleep_pins_mx: sdmmc3-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('D', 0, ANALOG) /* SDMMC3_CMD */
+				  STM32_PINMUX('D', 1, ANALOG) /* SDMMC3_D0 */
+				  STM32_PINMUX('D', 4, ANALOG) /* SDMMC3_D1 */
+				  STM32_PINMUX('D', 5, ANALOG) /* SDMMC3_D2 */
+				  STM32_PINMUX('D', 7, ANALOG) /* SDMMC3_D3 */
+				  STM32_PINMUX('G', 15, ANALOG) /* SDMMC3_CK */
+			>;
+		};
+	};
+
+	txmp_i2c5_pins: i2c5-pins {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('A', 11, AF4) /* I2C5_SCL */
+				  STM32_PINMUX('A', 12, AF4) /* I2C5_SDA */
+			>;
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	txmp_i2c5_sleep_pins: i2c5-sleep-pins {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('A', 11, ANALOG) /* I2C5_SCL */
+				  STM32_PINMUX('A', 12, ANALOG) /* I2C5_SDA */
+			>;
+		};
+	};
+
+	txmp_uart4_pins: txmp-uart4-pins {
+		pins1 {
+			pinmux = <STM32_PINMUX('G', 11, AF6)>; /* UART4_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
+			bias-disable;
+		};
+	};
+
+	txmp_uart4_sleep_pins: txmp-uart4-sleep-pins {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('G', 11, ANALOG) /* UART4_TX */
+				  STM32_PINMUX('B', 2, ANALOG) /* UART4_RX */
+			>;
+		};
+	};
+
+	txmp_uart4_rts_pins: txmp-uart4-rts-pins {
+		pins1 {
+			pinmux = <STM32_PINMUX('A', 15, AF8)>; /* UART4_RTS */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	txmp_uart4_rts_sleep_pins: txmp-uart4-rts-sleep-pins {
+		pins {
+			pinmux = <STM32_PINMUX('A', 15, ANALOG)>; /* UART4_RTS */
+		};
+	};
+
+	txmp_uart5_pins: txmp-uart5 {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('C', 12, AF8) /* UART5_TX */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <
+				  STM32_PINMUX('D', 2, AF8) /* UART5_RX */
+			>;
+			bias-disable;
+		};
+	};
+
+	txmp_uart5_sleep_pins: txmp-uart5-sleep {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('C', 12, ANALOG) /* UART5_TX */
+				  STM32_PINMUX('D', 2, ANALOG) /* UART5_RX */
+			>;
+		};
+	};
+
+	txmp_uart5_rtscts_pins: txmp-uart5-rtscts {
+		pins1 {
+			pinmux = <STM32_PINMUX('C', 8, AF8)>; /* UART5_RTS */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('C', 9, AF8)>; /* UART5_CTS */
+			bias-disable;
+		};
+	};
+
+	txmp_uart5_rtscts_sleep_pins: txmp-uart5-rtscts-sleep {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('C', 8, ANALOG) /* UART5_RTS */
+				  STM32_PINMUX('C', 9, ANALOG) /* UART5_CTS */
+			>;
+		};
+	};
+
+	txmp_uart7_pins: uart7 {
+		pins1 {
+			pinmux = <STM32_PINMUX('E', 8, AF7)>; /* UART7_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 7, AF7)>; /* UART7_RX */
+			bias-disable;
+		};
+	};
+
+	txmp_uart7_sleep_pins: uart7-sleep {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('E', 8, ANALOG) /* UART7_TX */
+				  STM32_PINMUX('E', 7, ANALOG) /* UART7_RX */
+			>;
+		};
+	};
+
+	txmp_uart7_rtscts_pins: uart7-rtscts {
+		pins1 {
+			pinmux = <STM32_PINMUX('E', 9, AF7)>; /* UART7_RTS */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 10, AF7)>; /* UART7_CTS */
+			bias-disable;
+		};
+	};
+
+	txmp_uart7_rtscts_sleep_pins: uart7-rtscts-sleep {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('E', 8, ANALOG) /* UART7_TX */
+				  STM32_PINMUX('E', 7, ANALOG) /* UART7_RX */
+				  STM32_PINMUX('E', 9, ANALOG) /* UART7_RTS */
+				  STM32_PINMUX('E', 10, ANALOG) /* UART7_CTS */
+			>;
+		};
+	};
+};
Index: karo-tx-linux/arch/arm/boot/dts/stm32mp15-ddr.dtsi
===================================================================
--- /dev/null
+++ karo-tx-linux/arch/arm/boot/dts/stm32mp15-ddr.dtsi
@@ -0,0 +1,142 @@
+// SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause
+/*
+ * Copyright : STMicroelectronics 2018
+ */
+
+#include "stm32mp15-mx.h"
+
+/ {
+	soc {
+		ddr: ddr@5a003000 {
+			compatible = "st,stm32mp1-ddr";
+			reg = <0x5a003000 0x550
+			       0x5a004000 0x234>;
+			clocks = <&rcc AXIDCG>,
+				 <&rcc DDRC1>,
+				 <&rcc DDRC2>,
+				 <&rcc DDRPHYC>,
+				 <&rcc DDRCAPB>,
+				 <&rcc DDRPHYCAPB>;
+			clock-names = "axidcg",
+				      "ddrc1",
+				      "ddrc2",
+				      "ddrphyc",
+				      "ddrcapb",
+				      "ddrphycapb";
+			st,mem-name = DDR_MEM_NAME;
+			st,mem-speed = <DDR_MEM_SPEED>;
+			st,mem-size = <DDR_MEM_SIZE>;
+			st,ctl-reg = <
+				DDR_MSTR
+				DDR_MRCTRL0
+				DDR_MRCTRL1
+				DDR_DERATEEN
+				DDR_DERATEINT
+				DDR_PWRCTL
+				DDR_PWRTMG
+				DDR_HWLPCTL
+				DDR_RFSHCTL0
+				DDR_RFSHCTL3
+				DDR_CRCPARCTL0
+				DDR_ZQCTL0
+				DDR_DFITMG0
+				DDR_DFITMG1
+				DDR_DFILPCFG0
+				DDR_DFIUPD0
+				DDR_DFIUPD1
+				DDR_DFIUPD2
+				DDR_DFIPHYMSTR
+				DDR_ODTMAP
+				DDR_DBG0
+				DDR_DBG1
+				DDR_DBGCMD
+				DDR_POISONCFG
+				DDR_PCCFG
+			>;
+			st,ctl-timing = <
+				DDR_RFSHTMG
+				DDR_DRAMTMG0
+				DDR_DRAMTMG1
+				DDR_DRAMTMG2
+				DDR_DRAMTMG3
+				DDR_DRAMTMG4
+				DDR_DRAMTMG5
+				DDR_DRAMTMG6
+				DDR_DRAMTMG7
+				DDR_DRAMTMG8
+				DDR_DRAMTMG14
+				DDR_ODTCFG
+			>;
+			st,ctl-map = <
+				DDR_ADDRMAP1
+				DDR_ADDRMAP2
+				DDR_ADDRMAP3
+				DDR_ADDRMAP4
+				DDR_ADDRMAP5
+				DDR_ADDRMAP6
+				DDR_ADDRMAP9
+				DDR_ADDRMAP10
+				DDR_ADDRMAP11
+			>;
+			st,ctl-perf = <
+				DDR_SCHED
+				DDR_SCHED1
+				DDR_PERFHPR1
+				DDR_PERFLPR1
+				DDR_PERFWR1
+				DDR_PCFGR_0
+				DDR_PCFGW_0
+				DDR_PCFGQOS0_0
+				DDR_PCFGQOS1_0
+				DDR_PCFGWQOS0_0
+				DDR_PCFGWQOS1_0
+				DDR_PCFGR_1
+				DDR_PCFGW_1
+				DDR_PCFGQOS0_1
+				DDR_PCFGQOS1_1
+				DDR_PCFGWQOS0_1
+				DDR_PCFGWQOS1_1
+			>;
+			st,phy-reg = <
+				DDR_PGCR
+				DDR_ACIOCR
+				DDR_DXCCR
+				DDR_DSGCR
+				DDR_DCR
+				DDR_ODTCR
+				DDR_ZQ0CR1
+				DDR_DX0GCR
+				DDR_DX1GCR
+				DDR_DX2GCR
+				DDR_DX3GCR
+			>;
+			st,phy-timing = <
+				DDR_PTR0
+				DDR_PTR1
+				DDR_PTR2
+				DDR_DTPR0
+				DDR_DTPR1
+				DDR_DTPR2
+				DDR_MR0
+				DDR_MR1
+				DDR_MR2
+				DDR_MR3
+			>;
+			st,phy-cal = <
+				DDR_DX0DLLCR
+				DDR_DX0DQTR
+				DDR_DX0DQSTR
+				DDR_DX1DLLCR
+				DDR_DX1DQTR
+				DDR_DX1DQSTR
+				DDR_DX2DLLCR
+				DDR_DX2DQTR
+				DDR_DX2DQSTR
+				DDR_DX3DLLCR
+				DDR_DX3DQTR
+				DDR_DX3DQSTR
+			>;
+			status = "okay";
+		};
+	};
+};
Index: karo-tx-linux/arch/arm/boot/dts/stm32mp15-mx.h
===================================================================
--- /dev/null
+++ karo-tx-linux/arch/arm/boot/dts/stm32mp15-mx.h
@@ -0,0 +1,119 @@
+/*
+ * Copyright (C) 2015-2018, STMicroelectronics - All Rights Reserved
+ *
+ * SPDX-License-Identifier:	GPL-2.0+	BSD-3-Clause
+ *
+ */
+
+/*
+ * File generated by STMicroelectronics STM32CubeMX DDR Tool for MPUs
+ * DDR type: DDR3 / DDR3L
+ * DDR width: 16bits
+ * DDR density: 2Gb
+ * System frequency: 533000Khz
+ * Relaxed Timing Mode: false
+ * Address mapping type: RBC
+ *
+ * Save Date: 2019.08.16, save Time: 17:02:41
+ */
+
+#define DDR_MEM_NAME	"DDR3L-1066/777 bin F 1x2Gb 533MHz"
+#define DDR_MEM_SPEED	533000
+#define DDR_MEM_SIZE	0x10000000
+
+#define DDR_MSTR 0x00041401
+#define DDR_MRCTRL0 0x00000010
+#define DDR_MRCTRL1 0x00000000
+#define DDR_DERATEEN 0x00000000
+#define DDR_DERATEINT 0x00800000
+#define DDR_PWRCTL 0x00000000
+#define DDR_PWRTMG 0x00400010
+#define DDR_HWLPCTL 0x00000000
+#define DDR_RFSHCTL0 0x00210000
+#define DDR_RFSHCTL3 0x00000000
+#define DDR_RFSHTMG 0x0081008B
+#define DDR_CRCPARCTL0 0x00000000
+#define DDR_DRAMTMG0 0x121B2414
+#define DDR_DRAMTMG1 0x000A041C
+#define DDR_DRAMTMG2 0x0608090F
+#define DDR_DRAMTMG3 0x0050400C
+#define DDR_DRAMTMG4 0x08040608
+#define DDR_DRAMTMG5 0x06060403
+#define DDR_DRAMTMG6 0x02020002
+#define DDR_DRAMTMG7 0x00000202
+#define DDR_DRAMTMG8 0x00001005
+#define DDR_DRAMTMG14 0x000000A0
+#define DDR_ZQCTL0 0xC2000040
+#define DDR_DFITMG0 0x02060105
+#define DDR_DFITMG1 0x00000202
+#define DDR_DFILPCFG0 0x07000000
+#define DDR_DFIUPD0 0xC0400003
+#define DDR_DFIUPD1 0x00000000
+#define DDR_DFIUPD2 0x00000000
+#define DDR_DFIPHYMSTR 0x00000000
+#define DDR_ODTCFG 0x06000600
+#define DDR_ODTMAP 0x00000001
+#define DDR_SCHED 0x00000C01
+#define DDR_SCHED1 0x00000000
+#define DDR_PERFHPR1 0x01000001
+#define DDR_PERFLPR1 0x08000200
+#define DDR_PERFWR1 0x08000400
+#define DDR_DBG0 0x00000000
+#define DDR_DBG1 0x00000000
+#define DDR_DBGCMD 0x00000000
+#define DDR_POISONCFG 0x00000000
+#define DDR_PCCFG 0x00000010
+#define DDR_PCFGR_0 0x00010000
+#define DDR_PCFGW_0 0x00000000
+#define DDR_PCFGQOS0_0 0x02100C03
+#define DDR_PCFGQOS1_0 0x00800100
+#define DDR_PCFGWQOS0_0 0x01100C03
+#define DDR_PCFGWQOS1_0 0x01000200
+#define DDR_PCFGR_1 0x00010000
+#define DDR_PCFGW_1 0x00000000
+#define DDR_PCFGQOS0_1 0x02100C03
+#define DDR_PCFGQOS1_1 0x00800040
+#define DDR_PCFGWQOS0_1 0x01100C03
+#define DDR_PCFGWQOS1_1 0x01000200
+#define DDR_ADDRMAP1 0x00070707
+#define DDR_ADDRMAP2 0x00000000
+#define DDR_ADDRMAP3 0x1F000000
+#define DDR_ADDRMAP4 0x00001F1F
+#define DDR_ADDRMAP5 0x06060606
+#define DDR_ADDRMAP6 0x0F0F0606
+#define DDR_ADDRMAP9 0x00000000
+#define DDR_ADDRMAP10 0x00000000
+#define DDR_ADDRMAP11 0x00000000
+#define DDR_PGCR 0x01442E02
+#define DDR_PTR0 0x0022AA5B
+#define DDR_PTR1 0x04841104
+#define DDR_PTR2 0x042DA068
+#define DDR_ACIOCR 0x10400812
+#define DDR_DXCCR 0x00000C40
+#define DDR_DSGCR 0xF200001F
+#define DDR_DCR 0x0000000B
+#define DDR_DTPR0 0x38D488D0
+#define DDR_DTPR1 0x098B00D8
+#define DDR_DTPR2 0x10023600
+#define DDR_MR0 0x00000840
+#define DDR_MR1 0x00000000
+#define DDR_MR2 0x00000208
+#define DDR_MR3 0x00000000
+#define DDR_ODTCR 0x00010000
+#define DDR_ZQ0CR1 0x00000038
+#define DDR_DX0GCR 0x0000CE81
+#define DDR_DX0DLLCR 0x40000000
+#define DDR_DX0DQTR 0xFFFFFFFF
+#define DDR_DX0DQSTR 0x3DB02000
+#define DDR_DX1GCR 0x0000CE81
+#define DDR_DX1DLLCR 0x40000000
+#define DDR_DX1DQTR 0xFFFFFFFF
+#define DDR_DX1DQSTR 0x3DB02000
+#define DDR_DX2GCR 0x0000C881
+#define DDR_DX2DLLCR 0x40000000
+#define DDR_DX2DQTR 0xFFFFFFFF
+#define DDR_DX2DQSTR 0x3DB02000
+#define DDR_DX3GCR 0x0000C881
+#define DDR_DX3DLLCR 0x40000000
+#define DDR_DX3DQTR 0xFFFFFFFF
+#define DDR_DX3DQSTR 0x3DB02000
Index: karo-tx-linux/arch/arm/boot/dts/Makefile
===================================================================
--- karo-tx-linux.orig/arch/arm/boot/dts/Makefile
+++ karo-tx-linux/arch/arm/boot/dts/Makefile
@@ -922,7 +922,12 @@ dtb-$(CONFIG_ARCH_STM32) += \
 	stm32746g-eval.dtb \
 	stm32h743i-eval.dtb \
 	stm32h743i-disco.dtb \
+	stm32mp153a-txmp-1531.dtb \
+	stm32mp153a-txmp-1531-mb7.dtb \
+	stm32mp153a-txmp-1531-mipi-mb.dtb \
 	stm32mp157a-dk1.dtb \
+	stm32mp157c-qsmp-1570.dtb \
+	stm32mp157c-qsmp-1570-qsbase1.dtb \
 	stm32mp157c-dk2.dtb \
 	stm32mp157c-dk2-a7-examples.dtb \
 	stm32mp157c-dk2-m4-examples.dtb \
Index: karo-tx-linux/arch/arm/boot/dts/stm32mp157c-qsmp-1570.dts
===================================================================
--- /dev/null
+++ karo-tx-linux/arch/arm/boot/dts/stm32mp157c-qsmp-1570.dts
@@ -0,0 +1,730 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) STMicroelectronics 2019 - All Rights Reserved
+ * Author: STM32CubeMX code generation for STMicroelectronics.
+ */
+
+/dts-v1/;
+
+#include <dt-bindings/clock/stm32mp1-clks.h>
+#include <dt-bindings/gpio/gpio.h>
+
+#include "stm32mp157c.dtsi"
+#include "stm32mp157c-m4-srm.dtsi"
+#include "stm32mp157cac-pinctrl.dtsi"
+#include "stm32mp15-ddr.dtsi"
+
+/ {
+	model = "Ka-Ro electronics GmbH QSMP-1570 solder-in module";
+	compatible = "st,stm32mp157c-qsmp-1570", "st,stm32mp157";
+
+	aliases {
+		ethernet0 = &ethernet0;
+		mmc0 = &sdmmc2;
+		mmc1 = &sdmmc1;
+		mmc2 = &sdmmc3;
+		spinor0 = &flash0;
+		serial0 = &uart4;
+		serial1 = &usart2;
+		serial2 = &usart3;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	lcd_backlight: lcd-backlight {
+		compatible = "gpio-backlight";
+		gpios = <&gpioa 15 GPIO_ACTIVE_LOW>;
+		default-on;
+	};
+
+	leds {
+		compatible = "gpio-leds";
+
+		module_led {
+			gpios = <&gpioa 13 GPIO_ACTIVE_LOW>;
+			label = "Heartbeat";
+			linux,default-trigger = "heartbeat";
+		};
+	};
+
+	reg_3v3: regulator-3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+	};
+
+	soc {
+		etzpc: etzpc@5c007000 {
+			compatible = "st,stm32mp1-etzpc";
+			reg = <0x5c007000 0x400>;
+			clocks = <&rcc TZPC>;
+			status = "okay";
+			secure-status = "okay";
+		};
+
+		stgen: stgen@5c008000 {
+			compatible = "st,stm32-stgen";
+			reg = <0x5c008000 0x1000>;
+			status = "okay";
+		};
+	};
+
+	usb_phy_tuning: usb-phy-tuning {
+		st,hs-dc-level = <2>;
+		st,fs-rftime-tuning;
+		st,hs-rftime-reduction;
+		st,hs-current-trim = <15>;
+		st,hs-impedance-trim = <1>;
+		st,squelch-level = <3>;
+		st,hs-rx-offset = <2>;
+		st,no-lsfs-sc;
+	};
+
+	/delete-node/ pin-controller-z@54004000;
+};
+
+&adc {
+	vdd-supply = <&reg_3v3>;
+	vdda-supply = <&reg_3v3>;
+	vref-supply = <&vrefbuf>;
+	status = "disabled";
+};
+
+&adc2 {
+	status = "disabled";
+};
+
+&adc_temp {
+	status = "disabled";
+};
+
+&vrefbuf {
+	regulator-min-microvolt = <2500000>;
+	regulator-max-microvolt = <2500000>;
+	vdda-supply = <&reg_3v3>;
+	status = "disabled";
+};
+
+&bsec {
+	status = "okay";
+	secure-status = "okay";
+};
+
+&ethernet0 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&ethernet0_rgmii_pins>;
+	pinctrl-1 = <&ethernet0_rgmii_pins_sleep>;
+	phy-mode = "rgmii";
+	phy-handle = <&phy0>;
+	clock-names = "stmmaceth", "mac-clk-tx", "mac-clk-rx",
+		      "ethstp", "syscfg-clk", "eth-ck";
+	clocks = <&rcc ETHMAC &rcc ETHTX &rcc ETHRX
+		  &rcc ETHSTP &rcc SYSCFG &rcc ETHCK_K>;
+	status = "okay";
+
+	mdio0 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		compatible = "snps,dwmac-mdio";
+		reset-gpios = <&gpioa 4 GPIO_ACTIVE_LOW>;
+		reset-delay-us = <10000>;
+		post-reset-delay-us = <1000>;
+
+		phy0: ethernet-phy@3 {
+			compatible = "ethernet-phy-id0022.1622";
+			reg = <3>;
+			interrupt-parent = <&gpioa>;
+			interrupts = <9 IRQ_TYPE_EDGE_FALLING>;
+			rxd0-skew-ps = <(420 + 6)>;
+			rxd1-skew-ps = <(420 + 5)>;
+			rxd2-skew-ps = <(420 - 1)>;
+			rxd3-skew-ps = <(420 - 22)>;
+			txd0-skew-ps = <(420 - 103)>;
+			txd1-skew-ps = <(420 - 104)>;
+			txd2-skew-ps = <(420 - 73)>;
+			txd3-skew-ps = <(420 - 25)>;
+			txen-skew-ps = <(420 + 15)>;
+			rxdv-skew-ps = <(420 - 12)>;
+			rxc-skew-ps = <(900 + 0)>;
+			txc-skew-ps = <(900 + 1000)>;
+		};
+	};
+};
+
+&i2c1 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c1_pins_mx>;
+	pinctrl-1 = <&i2c1_sleep_pins_mx>;
+};
+
+&i2c5 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c5_pins_mx>;
+	pinctrl-1 = <&i2c5_sleep_pins_mx>;
+	status = "okay";
+};
+
+&i2c6 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c6_pins_mx>;
+	pinctrl-1 = <&i2c6_sleep_pins_mx>;
+	status = "disabled";
+};
+
+&iwdg2 {
+	timeout-sec = <32>;
+	status = "okay";
+};
+
+&m_can1 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&fdcan1_pins_mx>;
+	pinctrl-1 = <&fdcan1_sleep_pins_mx>;
+	status = "okay";
+};
+
+&m_can2 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&fdcan2_pins_mx>;
+	pinctrl-1 = <&fdcan2_sleep_pins_mx>;
+	status = "okay";
+};
+
+&m4_spi4 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&spi4_pins_mx>;
+	status = "okay";
+};
+
+&qspi {
+	pinctrl-names = "default";
+	pinctrl-0 = <&quadspi_pins_mx>;
+	reg = <0x58003000 0x1000>, <0x70000000 0x1000000>;
+	status = "okay";
+
+	flash0: gd25q16c@0 {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "gd25q16c", "spi-flash";
+		reg = <0>;
+		spi-rx-bus-width = <2>;
+		spi-max-frequency = <104000000>;
+		memory-map = <0x90000000 0x1000000>;
+	};
+};
+
+&rtc {
+	status = "okay";
+	secure-status = "okay";
+};
+
+&sdmmc1 {
+	arm,primecell-periphid = <0x10153180>;
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc1_pins_mx>;
+	pinctrl-1 = <&sdmmc1_pins_opendrain_mx>;
+	pinctrl-2 = <&sdmmc1_pins_sleep_mx>;
+	bus-width = <4>;
+	vmmc-supply = <&reg_3v3>;
+	cd-gpios = <&gpiob 7 GPIO_ACTIVE_LOW>;
+	no-1-8-v;
+	st,neg-edge;
+	status = "okay";
+};
+
+&sdmmc2 {
+	/* eMMC */
+	arm,primecell-periphid = <0x10153180>;
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc2_pins_mx>;
+	pinctrl-1 = <&sdmmc2_pins_opendrain_mx>;
+	pinctrl-2 = <&sdmmc2_pins_sleep_mx>;
+	bus-width = <4>;
+	vmmc-supply = <&reg_3v3>;
+	no-1-8-v;
+	no-sd;
+	no-sdio;
+	st,neg-edge;
+	non-removable;
+	status = "okay";
+};
+
+&uart4 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart4_pins_mx>;
+	status = "okay";
+};
+
+&usart2 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&usart2_pins_mx>;
+	pinctrl-1 = <&usart2_sleep_pins_mx>;
+	status = "okay";
+};
+
+&usart3 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&usart3_pins_mx>;
+	pinctrl-1 = <&usart3_sleep_pins_mx>;
+	status = "okay";
+};
+
+&usbh_ehci {
+	phys = <&usbphyc_port0>;
+	phy-names = "usb";
+	status = "okay";
+};
+
+&usbotg_hs {
+	phys = <&usbphyc_port1 0>;
+	phy-names = "usb2-phy";
+	dr_mode = "peripheral";
+	status = "okay";
+};
+
+&usbphyc {
+	vdd3v3-supply = <&reg_3v3>;
+	status = "okay";
+};
+
+&usbphyc_port0 {
+	st,phy-tuning = <&usb_phy_tuning>;
+	status = "okay";
+};
+
+&usbphyc_port1 {
+	st,phy-tuning = <&usb_phy_tuning>;
+	status = "okay";
+};
+
+&pinctrl {
+	ethernet0_rgmii_pins: ethernet0-rgmii-pins {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('G', 4, AF11) /* ETH_RGMII_GTX_CLK */
+				  STM32_PINMUX('G', 13, AF11) /* ETH_RGMII_TXD0 */
+				  STM32_PINMUX('G', 14, AF11) /* ETH_RGMII_TXD1 */
+				  STM32_PINMUX('C', 2, AF11) /* ETH_RGMII_TXD2 */
+				  STM32_PINMUX('B', 8, AF11) /* ETH_RGMII_TXD3 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+
+		pins2 {
+			pinmux = <
+				  STM32_PINMUX('B', 11, AF11) /* ETH_RGMII_TX_CTL */
+				  STM32_PINMUX('A', 2, AF11) /* ETH_MDIO */
+				  STM32_PINMUX('C', 1, AF11) /* ETH_MDC */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins3 {
+			/* Micrel KSZ92031 strap pins */
+			pinmux = <
+				  STM32_PINMUX('A', 7, AF11) /* RX_CTL | CLK125_EN */
+				  STM32_PINMUX('C', 4, AF11) /* RXD0 | MODE0 */
+				  STM32_PINMUX('C', 5, AF11) /* RXD1 | MODE1 */
+				  STM32_PINMUX('B', 0, AF11) /* RXD2 | MODE2 */
+				  STM32_PINMUX('H', 7, AF11) /* RXD3 | MODE3 */
+			>;
+			bias-pull-up;
+		};
+
+		pins4 {
+			pinmux = <
+				  STM32_PINMUX('G', 5, AF11) /* CLK125 | LED_MODE */
+				  STM32_PINMUX('A', 1, AF11) /* RX_CLK | PHYAD2 */
+			>;
+			bias-pull-down;
+		};
+	};
+
+	ethernet0_rgmii_pins_sleep: rgmii-pins-sleep {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('G', 5, ANALOG) /* ETH_RGMII_CLK125 */
+				  STM32_PINMUX('G', 4, ANALOG) /* ETH_RGMII_GTX_CLK */
+				  STM32_PINMUX('G', 13, ANALOG) /* ETH_RGMII_TXD0 */
+				  STM32_PINMUX('G', 14, ANALOG) /* ETH_RGMII_TXD1 */
+				  STM32_PINMUX('C', 2, ANALOG) /* ETH_RGMII_TXD2 */
+				  STM32_PINMUX('B', 8, ANALOG) /* ETH_RGMII_TXD3 */
+				  STM32_PINMUX('B', 11, ANALOG) /* ETH_RGMII_TX_CTL */
+				  STM32_PINMUX('A', 2, ANALOG) /* ETH_MDIO */
+				  STM32_PINMUX('C', 1, ANALOG) /* ETH_MDC */
+				  STM32_PINMUX('C', 4, ANALOG) /* ETH_RGMII_RXD0 */
+				  STM32_PINMUX('C', 5, ANALOG) /* ETH_RGMII_RXD1 */
+				  STM32_PINMUX('B', 0, ANALOG) /* ETH_RGMII_RXD2 */
+				  STM32_PINMUX('H', 7, ANALOG) /* ETH_RGMII_RXD3 */
+				  STM32_PINMUX('A', 1, ANALOG) /* ETH_RGMII_RX_CLK */
+				  STM32_PINMUX('A', 7, ANALOG) /* ETH_RGMII_RX_CTL */
+			>;
+		};
+	};
+
+	fdcan1_pins_mx: fdcan1-mx {
+		pins1 {
+			pinmux = <STM32_PINMUX('D', 0, AF9)>; /* FDCAN1_RX */
+			bias-disable;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('D', 1, AF9)>; /* FDCAN1_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	fdcan1_sleep_pins_mx: fdcan1-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('D', 0, ANALOG) /* FDCAN1_RX */
+				  STM32_PINMUX('D', 1, ANALOG) /* FDCAN1_TX */
+			>;
+		};
+	};
+
+	fdcan2_pins_mx: fdcan2-mx {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 13, AF9)>; /* FDCAN2_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 5, AF9)>; /* FDCAN2_RX */
+			bias-disable;
+		};
+	};
+
+	fdcan2_sleep_pins_mx: fdcan2-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('B', 5, ANALOG) /* FDCAN2_RX */
+				  STM32_PINMUX('B', 13, ANALOG) /* FDCAN2_TX */
+			>;
+		};
+	};
+
+	i2c1_pins_mx: i2c1-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('D', 12, AF5) /* I2C1_SCL */
+				  STM32_PINMUX('F', 15, AF5) /* I2C1_SDA */
+			>;
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	i2c1_sleep_pins_mx: i2c1-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('D', 12, ANALOG) /* I2C1_SCL */
+				  STM32_PINMUX('F', 15, ANALOG) /* I2C1_SDA */
+			>;
+		};
+	};
+
+	i2c5_pins_mx: i2c5-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('A', 11, AF4) /* I2C5_SCL */
+				  STM32_PINMUX('A', 12, AF4) /* I2C5_SDA */
+			>;
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	i2c5_sleep_pins_mx: i2c5-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('A', 11, ANALOG) /* I2C5_SCL */
+				  STM32_PINMUX('A', 12, ANALOG) /* I2C5_SDA */
+			>;
+		};
+	};
+
+	i2c6_pins_mx: i2c6-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('Z', 0, AF2) /* I2C6_SCL */
+				  STM32_PINMUX('Z', 1, AF2) /* I2C6_SDA */
+			>;
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	i2c6_sleep_pins_mx: i2c6-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('Z', 0, ANALOG) /* I2C6_SCL */
+				  STM32_PINMUX('Z', 1, ANALOG) /* I2C6_SDA */
+			>;
+		};
+	};
+
+	quadspi_pins_mx: quadspi-pins-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('B', 6, AF10)	/* QUADSPI_BK1_NCS */
+				  STM32_PINMUX('F', 9, AF10)	/* QUADSPI_BK1_IO1 */
+				  STM32_PINMUX('F', 8, AF10)	/* QUADSPI_BK1_IO0 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('F', 10, AF9)>; /* QUADSPI_CLK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+	};
+
+	sdmmc1_pins_mx: sdmmc1-pins-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('D', 2, AF12)	/* SDMMC1_CMD */
+				  STM32_PINMUX('C', 8, AF12)	/* SDMMC1_D0 */
+				  STM32_PINMUX('C', 9, AF12)	/* SDMMC1_D1 */
+				  STM32_PINMUX('C', 10, AF12)	/* SDMMC1_D2 */
+				  STM32_PINMUX('C', 11, AF12)	/* SDMMC1_D3 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+	};
+
+	sdmmc1_pins_opendrain_mx: sdmmc1-pins-opendrain-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('D', 2, AF12)	/* SDMMC1_CMD */
+				  STM32_PINMUX('C', 8, AF12)	/* SDMMC1_D0 */
+				  STM32_PINMUX('C', 9, AF12)	/* SDMMC1_D1 */
+				  STM32_PINMUX('C', 10, AF12)	/* SDMMC1_D2 */
+				  STM32_PINMUX('C', 11, AF12)	/* SDMMC1_D3 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <1>;
+		};
+
+		pins3 {
+			pinmux = <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+	};
+
+	sdmmc1_pins_sleep_mx: sdmmc1-pins-sleep-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('D', 2, ANALOG)	/* SDMMC1_CMD */
+				  STM32_PINMUX('C', 8, ANALOG)	/* SDMMC1_D0 */
+				  STM32_PINMUX('C', 9, ANALOG)	/* SDMMC1_D1 */
+				  STM32_PINMUX('C', 10, ANALOG)	/* SDMMC1_D2 */
+				  STM32_PINMUX('C', 11, ANALOG)	/* SDMMC1_D3 */
+				  STM32_PINMUX('C', 12, ANALOG)	/* SDMMC1_CK */
+			>;
+		};
+	};
+
+	sdmmc2_pins_mx: sdmmc2-pins-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('B', 14, AF9)	/* SDMMC2_D0 */
+				  STM32_PINMUX('B', 15, AF9)	/* SDMMC2_D1 */
+				  STM32_PINMUX('B', 3, AF9)	/* SDMMC2_D2 */
+				  STM32_PINMUX('B', 4, AF9)	/* SDMMC2_D3 */
+				  STM32_PINMUX('A', 8, AF9)	/* SDMMC2_D4 */
+				  STM32_PINMUX('B', 9, AF9)	/* SDMMC2_D5 */
+				  STM32_PINMUX('C', 6, AF9)	/* SDMMC2_D6 */
+				  STM32_PINMUX('C', 7, AF9)	/* SDMMC2_D7 */
+				  STM32_PINMUX('G', 6, AF10)	/* SDMMC2_CMD */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc2_pins_opendrain_mx: sdmmc2-pins-opendrain-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('B', 14, AF9)	/* SDMMC2_D0 */
+				  STM32_PINMUX('B', 15, AF9)	/* SDMMC2_D1 */
+				  STM32_PINMUX('B', 3, AF9)	/* SDMMC2_D2 */
+				  STM32_PINMUX('B', 4, AF9)	/* SDMMC2_D3 */
+				  STM32_PINMUX('A', 8, AF9)	/* SDMMC2_D4 */
+				  STM32_PINMUX('B', 9, AF9)	/* SDMMC2_D5 */
+				  STM32_PINMUX('C', 6, AF9)	/* SDMMC2_D6 */
+				  STM32_PINMUX('C', 7, AF9)	/* SDMMC2_D7 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('G', 6, AF10)>;	/* SDMMC2_CMD */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <1>;
+		};
+
+		pins3 {
+			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc2_pins_sleep_mx: sdmmc2-pins-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('B', 14, ANALOG)	/* SDMMC2_D0 */
+				  STM32_PINMUX('B', 15, ANALOG)	/* SDMMC2_D1 */
+				  STM32_PINMUX('B', 3, ANALOG)	/* SDMMC2_D2 */
+				  STM32_PINMUX('B', 4, ANALOG)	/* SDMMC2_D3 */
+				  STM32_PINMUX('A', 8, ANALOG)	/* SDMMC2_D4 */
+				  STM32_PINMUX('B', 9, ANALOG)	/* SDMMC2_D5 */
+				  STM32_PINMUX('C', 6, ANALOG)	/* SDMMC2_D6 */
+				  STM32_PINMUX('C', 7, ANALOG)	/* SDMMC2_D7 */
+				  STM32_PINMUX('G', 6, ANALOG)	/* SDMMC2_CMD */
+				  STM32_PINMUX('E', 3, ANALOG)	/* SDMMC2_CK */
+			>;
+		};
+	};
+
+	spi4_pins_mx: spi4-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('E', 2, AF5) /* SPI4_SCK */
+				  STM32_PINMUX('E', 5, AF5) /* SPI4_MISO */
+				  STM32_PINMUX('E', 11, AF5) /* SPI4_NSS */
+				  STM32_PINMUX('E', 14, AF5) /* SPI4_MOSI */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+	};
+
+	spi4_sleep_pins_mx: spi4-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('E', 2, ANALOG) /* SPI4_SCK */
+				  STM32_PINMUX('E', 5, ANALOG) /* SPI4_MISO */
+				  STM32_PINMUX('E', 11, ANALOG) /* SPI4_NSS */
+				  STM32_PINMUX('E', 14, ANALOG) /* SPI4_MOSI */
+			>;
+		};
+	};
+
+	uart4_pins_mx: uart4-pins-mx {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
+			bias-disable;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('G', 11, AF6)>; /* UART4_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	usart2_pins_mx: usart2-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('D', 3, AF7) /* USART2_CTS */
+				  STM32_PINMUX('D', 6, AF7) /* USART2_RX */
+			>;
+			bias-disable;
+		};
+
+		pins2 {
+			pinmux = <
+				  STM32_PINMUX('D', 4, AF7) /* USART2_RTS */
+				  STM32_PINMUX('D', 5, AF7) /* USART2_TX */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	usart2_sleep_pins_mx: usart2-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('D', 3, ANALOG) /* USART2_CTS */
+				  STM32_PINMUX('D', 4, ANALOG) /* USART2_RTS */
+				  STM32_PINMUX('D', 5, ANALOG) /* USART2_TX */
+				  STM32_PINMUX('D', 6, ANALOG) /* USART2_RX */
+			>;
+		};
+	};
+
+	usart3_pins_mx: usart3-mx {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 10, AF7)>; /* USART3_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
+			bias-disable;
+		};
+	};
+
+	usart3_sleep_pins_mx: usart3-sleep-mx {
+		pins {
+			pinmux = <STM32_PINMUX('B', 10, ANALOG) /* USART3_TX */
+				  STM32_PINMUX('B', 12, ANALOG) /* USART3_RX */
+			>;
+		};
+	};
+};
Index: karo-tx-linux/arch/arm/boot/dts/stm32mp153a-txmp-1531-mb7.dts
===================================================================
--- /dev/null
+++ karo-tx-linux/arch/arm/boot/dts/stm32mp153a-txmp-1531-mb7.dts
@@ -0,0 +1,204 @@
+// SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause
+
+/dts-v1/;
+
+#include "stm32mp153a-txmp-1531.dts"
+#include "stm32mp15-txmp-mb7.dtsi"
+
+/ {
+	model = "Ka-Ro electronics GmbH TXMP-1531 module on MB7 baseboard";
+
+	reg_2v5: regulator-2v5 {
+		compatible = "regulator-fixed";
+		regulator-name = "2v5";
+		regulator-min-microvolt = <2500000>;
+		regulator-max-microvolt = <2500000>;
+		regulator-always-on;
+	};
+
+	sound {
+		compatible = "karo,stm32mp153a-sgtl5000",
+			     "audio-graph-card";
+		label = "TXMP-SGTL5000";
+		routing =
+			"MIC_IN", "Mic Jack",
+			"Mic Jack", "Mic Bias",
+			"Headphone Jack", "HP_OUT";
+		dais = <&sai2a_port>;
+		status = "okay";
+	};
+};
+
+&gpu {
+	status = "okay";
+};
+
+&i2c5 {
+	sgtl5000: codec@a {
+		compatible = "fsl,sgtl5000";
+		#sound-dai-cells = <0>;
+		reg = <0xa>;
+		VDDA-supply = <&reg_2v5>;
+		VDDIO-supply = <&reg_3v3>;
+		clocks = <&mclk>;
+		status = "okay";
+
+		port {
+			sgtl5000_in: endpoint {
+				remote-endpoint = <&sai2_out>;
+			};
+		};
+	};
+};
+
+&lcd_panel {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&txmp_ltdc_pins>;
+	pinctrl-1 = <&txmp_ltdc_pins_sleep>;
+	enable-gpios = <&gpiod 15 GPIO_ACTIVE_HIGH>;
+	reset-gpios = <&gpioe 1 GPIO_ACTIVE_HIGH>;
+};
+
+&sai2 {
+	clocks = <&rcc SAI2>, <&rcc PLL3_Q>, <&rcc PLL3_R>;
+	clock-names = "pclk", "x8k", "x11k";
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&txmp_sai2_pins>;
+	pinctrl-1 = <&txmp_sai2_sleep_pins>;
+	status = "okay";
+};
+
+&sai2a {
+	#clock-cells = <0>;
+	dma-names = "tx";
+	status = "okay";
+
+	sai2a_port: port {
+		sai2_out: endpoint {
+			remote-endpoint = <&sgtl5000_in>;
+			dai-format = "i2s";
+			bitclock-master = <&sgtl5000>;
+			mclk-fs = <256>;
+		};
+	};
+};
+
+&pinctrl {
+	txmp_ltdc_pins: txmp-ltdc-pins {
+		pins1 {
+			pinmux = <
+				  /* LCD_R0 is not connected! */
+				  //STM32_PINMUX('G',  9, AF14) /* LCD_R1 */
+				  STM32_PINMUX('C', 10, AF14) /* LCD_R2 */
+				  STM32_PINMUX('B',  0,  AF9) /* LCD_R3 */
+				  STM32_PINMUX('A',  5, AF14) /* LCD_R4 */
+				  STM32_PINMUX('A',  9, AF14) /* LCD_R5 */
+				  STM32_PINMUX('B',  1,  AF9) /* LCD_R6 */
+				  STM32_PINMUX('E', 15, AF14) /* LCD_R7 */
+				  //STM32_PINMUX('E', 14, AF13) /* LCD_G0 */
+				  //STM32_PINMUX('E',  6, AF14) /* LCD_G1 */
+				  STM32_PINMUX('A',  6, AF14) /* LCD_G2 */
+				  STM32_PINMUX('E', 11, AF14) /* LCD_G3 */
+				  STM32_PINMUX('B', 10, AF14) /* LCD_G4 */
+				  STM32_PINMUX('F', 11, AF14) /* LCD_G5 */
+				  STM32_PINMUX('C',  7, AF14) /* LCD_G6 */
+				  //STM32_PINMUX('G',  8, AF14) /* LCD_G7 => ETH_CLK! */
+				  //STM32_PINMUX('D',  9, AF14) /* LCD_B0 */
+				  //STM32_PINMUX('G', 12, AF14) /* LCD_B1 */
+				  STM32_PINMUX('G', 10, AF14) /* LCD_B2 */
+				  STM32_PINMUX('D', 10, AF14) /* LCD_B3 */
+				  STM32_PINMUX('E', 12, AF14) /* LCD_B4 */
+				  STM32_PINMUX('A',  3, AF14) /* LCD_B5 */
+				  STM32_PINMUX('B',  8, AF14) /* LCD_B6 */
+				  STM32_PINMUX('D',  8, AF14) /* LCD_B7 */
+				>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('G',  7, AF14) /* LCD_CLK */
+				  STM32_PINMUX('C',  6, AF14) /* LCD_HSYNC */
+				  STM32_PINMUX('A',  4, AF14) /* LCD_VSYNC */
+				>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins3 {
+			pinmux = <
+				  STM32_PINMUX('E', 13, AF14) /* LCD_DE */
+				>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	txmp_ltdc_pins_sleep: txmp-lcd-pins-sleep {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('G',  7, ANALOG) /* LCD_CLK */
+				  STM32_PINMUX('C',  6, ANALOG) /* LCD_HSYNC */
+				  STM32_PINMUX('A',  4, ANALOG) /* LCD_VSYNC */
+				  STM32_PINMUX('E', 13, ANALOG) /* LCD_DE */
+				  /* LCD_R0 is not connected! */
+				  //STM32_PINMUX('G',  9, ANALOG) /* LCD_R1 */
+				  STM32_PINMUX('C', 10, ANALOG) /* LCD_R2 */
+				  STM32_PINMUX('B',  0, ANALOG) /* LCD_R3 */
+				  STM32_PINMUX('A',  5, ANALOG) /* LCD_R4 */
+				  STM32_PINMUX('A',  9, ANALOG) /* LCD_R5 */
+				  STM32_PINMUX('B',  1, ANALOG) /* LCD_R6 */
+				  STM32_PINMUX('E', 15, ANALOG) /* LCD_R7 */
+				  //STM32_PINMUX('E', 14, ANALOG) /* LCD_G0 */
+				  //STM32_PINMUX('E',  6, ANALOG) /* LCD_G1 */
+				  STM32_PINMUX('A',  6, ANALOG) /* LCD_G2 */
+				  STM32_PINMUX('E', 11, ANALOG) /* LCD_G3 */
+				  STM32_PINMUX('B', 10, ANALOG) /* LCD_G4 */
+				  STM32_PINMUX('F', 11, ANALOG) /* LCD_G5 */
+				  STM32_PINMUX('C',  7, ANALOG) /* LCD_G6 */
+				  //STM32_PINMUX('G',  8, ANALOG) /* LCD_G7 => ETH_CLK! */
+				  //STM32_PINMUX('D',  9, ANALOG) /* LCD_B0 */
+				  //STM32_PINMUX('G', 12, ANALOG) /* LCD_B1 */
+				  STM32_PINMUX('G', 10, ANALOG) /* LCD_B2 */
+				  STM32_PINMUX('D', 10, ANALOG) /* LCD_B3 */
+				  STM32_PINMUX('E', 12, ANALOG) /* LCD_B4 */
+				  STM32_PINMUX('A',  3, ANALOG) /* LCD_B5 */
+				  STM32_PINMUX('B',  8, ANALOG) /* LCD_B6 */
+				  STM32_PINMUX('D',  8, ANALOG) /* LCD_B7 */
+				>;
+		};
+	};
+
+	txmp_sai2_pins: txmp-sai2-pins {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('D', 11, AF10)	/* TXD */
+				  STM32_PINMUX('D', 12, AF10)	/* FS */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <
+				  STM32_PINMUX('A', 0, AF10)	/* RXD */
+				  STM32_PINMUX('D', 13, AF10)	/* SCK */
+			>;
+		};
+	};
+
+	txmp_sai2_sleep_pins: txmp-sai2-sleep-pins {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('A', 0, ANALOG)	/* RXD */
+				  STM32_PINMUX('D', 11, ANALOG)	/* TXD */
+				  STM32_PINMUX('D', 13, ANALOG)	/* SCK */
+				  STM32_PINMUX('D', 12, ANALOG)	/* FS */
+			>;
+		};
+	};
+};
Index: karo-tx-linux/arch/arm/boot/dts/stm32mp153a-txmp-1531-mipi-mb.dts
===================================================================
--- /dev/null
+++ karo-tx-linux/arch/arm/boot/dts/stm32mp153a-txmp-1531-mipi-mb.dts
@@ -0,0 +1,705 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) STMicroelectronics 2019 - All Rights Reserved
+ * Author: STM32CubeMX code generation for STMicroelectronics.
+ */
+
+/dts-v1/;
+
+#include <dt-bindings/clock/stm32mp1-clks.h>
+#include <dt-bindings/gpio/gpio.h>
+
+#include "stm32mp157c.dtsi"
+#include "stm32mp157c-m4-srm.dtsi"
+#include "stm32mp157cab-pinctrl.dtsi"
+#include "stm32mp15-ddr.dtsi"
+
+/ {
+	model = "Ka-Ro electronics GmbH TXMP-1531 module";
+	compatible = "st,stm32mp153a-txmp-1531", "st,stm32mp153";
+
+	aliases {
+		display = &lcd_panel;
+		ethernet0 = &ethernet0;
+		mmc0 = &sdmmc2;
+		mmc1 = &sdmmc3;
+		mmc2 = &sdmmc1;
+		spinor0 = &flash0;
+		serial0 = &uart4;
+		serial1 = &uart7;
+		serial2 = &uart5;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	lcd_backlight: lcd-backlight {
+		compatible = "gpio-backlight";
+		gpios = <&gpioa 10 GPIO_ACTIVE_LOW>;
+		default-on;
+	};
+
+	leds {
+		compatible = "gpio-leds";
+
+		module_led {
+			gpios = <&gpioe 4 GPIO_ACTIVE_HIGH>;
+			label = "Heartbeat";
+			linux,default-trigger = "heartbeat";
+		};
+	};
+
+	reg_3v3: regulator-3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+	};
+
+	soc {
+		etzpc: etzpc@5c007000 {
+			compatible = "st,stm32mp1-etzpc";
+			reg = <0x5c007000 0x400>;
+			clocks = <&rcc TZPC>;
+			status = "okay";
+			secure-status = "okay";
+		};
+
+		sound {
+		};
+
+		stgen: stgen@5c008000 {
+			compatible = "st,stm32-stgen";
+			reg = <0x5c008000 0x1000>;
+			status = "okay";
+		};
+	};
+
+	lcd_panel: panel {
+		compatible = "tianma,tm101jvhg32";
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&txmp_ltdc_pins>;
+		pinctrl-1 = <&txmp_ltdc_pins_sleep>;
+		enable-gpios = <&gpiod 15 GPIO_ACTIVE_HIGH>;
+		reset-gpios = <&gpioe 1 GPIO_ACTIVE_HIGH>;
+		backlight = <&lcd_backlight>;
+		power-supply = <&reg_3v3>;
+		status = "okay";
+
+		port {
+			panel_in: endpoint {
+				remote-endpoint = <&dsi_out>;
+			};
+		};
+	};
+
+	usb_phy_tuning: usb-phy-tuning {
+		st,hs-dc-level = <2>;
+		st,fs-rftime-tuning;
+		st,hs-rftime-reduction;
+		st,hs-current-trim = <15>;
+		st,hs-impedance-trim = <1>;
+		st,squelch-level = <3>;
+		st,hs-rx-offset = <2>;
+		st,no-lsfs-sc;
+	};
+};
+
+&bsec {
+	status = "okay";
+	secure-status = "okay";
+};
+
+&clk_lse {
+	status = "disabled";
+};
+
+&dsi {
+	status = "okay";
+
+	ports {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		port@0 {
+			reg = <0>;
+			dsi_in: endpoint {
+				remote-endpoint = <&ltdc_ep1_out>;
+			};
+		};
+
+		port@1 {
+			reg = <1>;
+			dsi_out: endpoint {
+				remote-endpoint = <&panel_in>;
+			};
+		};
+	};
+};
+
+&ethernet0 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&ethernet0_rmii_pins>;
+	pinctrl-1 = <&ethernet0_rmii_pins_sleep>;
+	phy-mode = "rmii";
+	max-speed = <100>;
+	phy-handle = <&phy0>;
+	clock-names = "stmmaceth", "mac-clk-tx", "mac-clk-rx",
+		      "ethstp", "syscfg-clk", "eth-ck";
+	clocks = <&rcc ETHMAC &rcc ETHTX &rcc ETHRX
+		  &rcc ETHSTP &rcc SYSCFG &rcc ETHCK_K>;
+	st,eth_ref_clk_sel;
+	status = "okay";
+
+	mdio0 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		compatible = "snps,dwmac-mdio";
+		reset-gpios = <&gpioa 14 GPIO_ACTIVE_LOW>;
+
+		phy0: ethernet-phy@0 {
+			reg = <0>;
+			interrupt-parent = <&gpioa>;
+			interrupts = <13 IRQ_TYPE_EDGE_FALLING>;
+			smsc,disable-energy-detect;
+		};
+	};
+};
+
+&iwdg2 {
+	timeout-sec = <32>;
+	status = "okay";
+};
+
+&ltdc {
+	status = "okay";
+
+	port {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ltdc_ep1_out: endpoint@1 {
+			reg = <1>;
+			remote-endpoint = <&dsi_in>;
+		};
+	};
+};
+
+&qspi {
+	pinctrl-names = "default";
+	pinctrl-0 = <&quadspi_pins_mx>;
+	reg = <0x58003000 0x1000>, <0x70000000 0x1000000>;
+	status = "okay";
+
+	flash0: gd25q16c@0 {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "gd25q16c", "spi-flash";
+		reg = <0>;
+		spi-rx-bus-width = <2>;
+		spi-max-frequency = <104000000>;
+		memory-map = <0x90000000 0x1000000>;
+	};
+};
+
+&rtc {
+	status = "okay";
+	secure-status = "okay";
+};
+
+&sdmmc2 {
+	/* eMMC */
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc2_pins_mx>;
+	pinctrl-1 = <&sdmmc2_pins_opendrain_mx>;
+	pinctrl-2 = <&sdmmc2_pins_sleep_mx>;
+	bus-width = <4>;
+	vmmc-supply = <&reg_3v3>;
+	no-1-8-v;
+	no-sd;
+	no-sdio;
+	st,neg-edge;
+	non-removable;
+	status = "okay";
+};
+
+&sdmmc3 {
+	/* SD card slot */
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc3_pins_mx>;
+	pinctrl-1 = <&sdmmc3_opendrain_pins_mx>;
+	pinctrl-2 = <&sdmmc3_sleep_pins_mx>;
+	cd-gpios = <&gpioc 11 GPIO_ACTIVE_LOW>;
+	bus-width = <4>;
+	vmmc-supply = <&reg_3v3>;
+	no-1-8-v;
+	st,neg-edge;
+//	st,sig-dir;
+	st,use-ckin;
+	status = "okay";
+};
+
+&uart4 {
+//	pinctrl-names = "default", "sleep";
+	pinctrl-names = "default";
+	pinctrl-0 = <&txmp_uart4_pins>;
+//	pinctrl-0 = <&txmp_uart4_sleep_pins>;
+	status = "okay";
+};
+
+&uart5 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&txmp_uart5_pins>;
+	pinctrl-1 = <&txmp_uart5_sleep_pins>;
+//	status = "okay";
+};
+
+&uart7 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&txmp_uart7_pins>;
+	pinctrl-1 = <&txmp_uart7_sleep_pins>;
+//	status = "okay";
+};
+
+&usbh_ehci {
+	phy-names = "usb";
+	phys = <&usbphyc_port0>;
+	status = "okay";
+};
+
+&usbotg_hs {
+	dr_mode = "peripheral";
+	phys = <&usbphyc_port1 0>;
+	phy-names = "usb2-phy";
+	status = "okay";
+};
+
+&usbphyc {
+	vdd3v3-supply = <&reg_3v3>;
+	status = "okay";
+};
+
+&usbphyc_port0 {
+	status = "okay";
+};
+
+&usbphyc_port1 {
+	status = "okay";
+};
+
+&pinctrl {
+	ethernet0_rmii_pins: ethernet0-rmii-pins {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('G', 8, AF2)	/* ETH_CLK */
+				  STM32_PINMUX('C', 1, AF11)	/* ETH_MDC */
+				  STM32_PINMUX('A', 2, AF11)	/* ETH_MDIO */
+				  STM32_PINMUX('B', 11, AF11)	/* ETH_RMII_TX_EN */
+				  STM32_PINMUX('G', 13, AF11)	/* ETH_RMII_TXD0 */
+				  STM32_PINMUX('G', 14, AF11)	/* ETH_RMII_TXD1 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+
+		pins2 {
+			pinmux = <
+				  STM32_PINMUX('C', 4, AF11)	/* ETH_RMII_RXD0 */
+				  STM32_PINMUX('C', 5, AF11)	/* ETH_RMII_RXD1 */
+				  STM32_PINMUX('A', 7, AF11)	/* ETH_RMII_CRS_DV */
+			>;
+			bias-disable;
+		};
+	};
+
+	ethernet0_rmii_pins_sleep: rmii-pins-sleep {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('G', 8, ANALOG)	/* ETH_CLK */
+				  STM32_PINMUX('G', 13, ANALOG)	/* ETH_RMII_TXD0 */
+				  STM32_PINMUX('G', 14, ANALOG)	/* ETH_RMII_TXD1 */
+				  STM32_PINMUX('B', 11, ANALOG)	/* ETH_RMII_TX_EN */
+				  STM32_PINMUX('A', 2, ANALOG)	/* ETH_MDIO */
+				  STM32_PINMUX('C', 1, ANALOG)	/* ETH_MDC */
+				  STM32_PINMUX('C', 4, ANALOG)	/* ETH_RMII_RXD0 */
+				  STM32_PINMUX('C', 5, ANALOG)	/* ETH_RMII_RXD1 */
+				  STM32_PINMUX('A', 7, ANALOG)	/* ETH_RMII_CRS_DV */
+			>;
+		};
+	};
+
+	quadspi_pins_mx: quadspi-pins-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('B', 6, AF10)	/* QUADSPI_BK1_NCS */
+				  STM32_PINMUX('F', 9, AF10)	/* QUADSPI_BK1_IO1 */
+				  STM32_PINMUX('F', 8, AF10)	/* QUADSPI_BK1_IO0 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('F', 10, AF9)>; /* QUADSPI_CLK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+	};
+
+	sdmmc2_pins_mx: sdmmc2-pins-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('B', 3, AF9)	/* SDMMC2_D2 */
+				  STM32_PINMUX('B', 4, AF9)	/* SDMMC2_D3 */
+				  STM32_PINMUX('B', 14, AF9)	/* SDMMC2_D0 */
+				  STM32_PINMUX('B', 15, AF9)	/* SDMMC2_D1 */
+				  STM32_PINMUX('G', 6, AF10)	/* SDMMC2_CMD */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc2_pins_opendrain_mx: sdmmc2-pins-opendrain-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('G', 6, AF10)	/* SDMMC2_CMD */
+			>;
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <
+				  STM32_PINMUX('B', 3, AF9)	/* SDMMC2_D2 */
+				  STM32_PINMUX('B', 4, AF9)	/* SDMMC2_D3 */
+				  STM32_PINMUX('B', 14, AF9)	/* SDMMC2_D0 */
+				  STM32_PINMUX('B', 15, AF9)	/* SDMMC2_D1 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins3 {
+			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc2_pins_sleep_mx: sdmmc2-pins-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('B', 3, ANALOG)	/* SDMMC2_D2 */
+				  STM32_PINMUX('B', 4, ANALOG)	/* SDMMC2_D3 */
+				  STM32_PINMUX('B', 14, ANALOG)	/* SDMMC2_D0 */
+				  STM32_PINMUX('B', 15, ANALOG)	/* SDMMC2_D1 */
+				  STM32_PINMUX('G', 6, ANALOG)	/* SDMMC2_CMD */
+				  STM32_PINMUX('E', 3, ANALOG)	/* SDMMC2_CK */
+			>;
+		};
+	};
+
+	sdmmc3_pins_mx: sdmmc3-pins-mx {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('D', 0, AF10)	/* SDMMC3_CMD */
+				  STM32_PINMUX('D', 1, AF10)	/* SDMMC3_D0 */
+				  STM32_PINMUX('D', 4, AF10)	/* SDMMC3_D1 */
+				  STM32_PINMUX('D', 5, AF10)	/* SDMMC3_D2 */
+				  STM32_PINMUX('D', 7, AF10)	/* SDMMC3_D3 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+	};
+
+	sdmmc3_opendrain_pins_mx: sdmmc3_opendrain-mx {
+		pins1 {
+			pinmux = <STM32_PINMUX('D', 0, AF10)>; /* SDMMC3_CMD */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <
+				  STM32_PINMUX('D', 1, AF10) /* SDMMC3_D0 */
+				  STM32_PINMUX('D', 4, AF10) /* SDMMC3_D1 */
+				  STM32_PINMUX('D', 5, AF10) /* SDMMC3_D2 */
+				  STM32_PINMUX('D', 7, AF10) /* SDMMC3_D3 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins3 {
+			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc3_sleep_pins_mx: sdmmc3-sleep-mx {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('D', 0, ANALOG) /* SDMMC3_CMD */
+				  STM32_PINMUX('D', 1, ANALOG) /* SDMMC3_D0 */
+				  STM32_PINMUX('D', 4, ANALOG) /* SDMMC3_D1 */
+				  STM32_PINMUX('D', 5, ANALOG) /* SDMMC3_D2 */
+				  STM32_PINMUX('D', 7, ANALOG) /* SDMMC3_D3 */
+				  STM32_PINMUX('G', 15, ANALOG) /* SDMMC3_CK */
+			>;
+		};
+	};
+
+	txmp_ltdc_pins: txmp-ltdc-pins {
+		pins1 {
+			pinmux = <
+				  /* LCD_R0 is not connected! */
+				  //STM32_PINMUX('G',  9, AF14) /* LCD_R1 */
+				  STM32_PINMUX('C', 10, AF14) /* LCD_R2 */
+				  STM32_PINMUX('B',  0,  AF9) /* LCD_R3 */
+				  STM32_PINMUX('A',  5, AF14) /* LCD_R4 */
+				  STM32_PINMUX('A',  9, AF14) /* LCD_R5 */
+				  STM32_PINMUX('B',  1,  AF9) /* LCD_R6 */
+				  STM32_PINMUX('E', 15, AF14) /* LCD_R7 */
+				  //STM32_PINMUX('E', 14, AF13) /* LCD_G0 */
+				  //STM32_PINMUX('E',  6, AF14) /* LCD_G1 */
+				  STM32_PINMUX('A',  6, AF14) /* LCD_G2 */
+				  STM32_PINMUX('E', 11, AF14) /* LCD_G3 */
+				  STM32_PINMUX('B', 10, AF14) /* LCD_G4 */
+				  STM32_PINMUX('F', 11, AF14) /* LCD_G5 */
+				  STM32_PINMUX('C',  7, AF14) /* LCD_G6 */
+				  //STM32_PINMUX('G',  8, AF14) /* LCD_G7 => ETH_CLK! */
+				  //STM32_PINMUX('D',  9, AF14) /* LCD_B0 */
+				  //STM32_PINMUX('G', 12, AF14) /* LCD_B1 */
+				  STM32_PINMUX('G', 10, AF14) /* LCD_B2 */
+				  STM32_PINMUX('D', 10, AF14) /* LCD_B3 */
+				  STM32_PINMUX('E', 12, AF14) /* LCD_B4 */
+				  STM32_PINMUX('A',  3, AF14) /* LCD_B5 */
+				  STM32_PINMUX('B',  8, AF14) /* LCD_B6 */
+				  STM32_PINMUX('D',  8, AF14) /* LCD_B7 */
+				>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('G',  7, AF14) /* LCD_CLK */
+				  STM32_PINMUX('C',  6, AF14) /* LCD_HSYNC */
+				  STM32_PINMUX('A',  4, AF14) /* LCD_VSYNC */
+				>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins3 {
+			pinmux = <
+				  STM32_PINMUX('E', 13, AF14) /* LCD_DE */
+				>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	txmp_ltdc_pins_sleep: txmp-lcd-pins-sleep {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('G',  7, ANALOG) /* LCD_CLK */
+				  STM32_PINMUX('C',  6, ANALOG) /* LCD_HSYNC */
+				  STM32_PINMUX('A',  4, ANALOG) /* LCD_VSYNC */
+				  STM32_PINMUX('E', 13, ANALOG) /* LCD_DE */
+				  /* LCD_R0 is not connected! */
+				  //STM32_PINMUX('G',  9, ANALOG) /* LCD_R1 */
+				  STM32_PINMUX('C', 10, ANALOG) /* LCD_R2 */
+				  STM32_PINMUX('B',  0, ANALOG) /* LCD_R3 */
+				  STM32_PINMUX('A',  5, ANALOG) /* LCD_R4 */
+				  STM32_PINMUX('A',  9, ANALOG) /* LCD_R5 */
+				  STM32_PINMUX('B',  1, ANALOG) /* LCD_R6 */
+				  STM32_PINMUX('E', 15, ANALOG) /* LCD_R7 */
+				  //STM32_PINMUX('E', 14, ANALOG) /* LCD_G0 */
+				  //STM32_PINMUX('E',  6, ANALOG) /* LCD_G1 */
+				  STM32_PINMUX('A',  6, ANALOG) /* LCD_G2 */
+				  STM32_PINMUX('E', 11, ANALOG) /* LCD_G3 */
+				  STM32_PINMUX('B', 10, ANALOG) /* LCD_G4 */
+				  STM32_PINMUX('F', 11, ANALOG) /* LCD_G5 */
+				  STM32_PINMUX('C',  7, ANALOG) /* LCD_G6 */
+				  //STM32_PINMUX('G',  8, ANALOG) /* LCD_G7 => ETH_CLK! */
+				  //STM32_PINMUX('D',  9, ANALOG) /* LCD_B0 */
+				  //STM32_PINMUX('G', 12, ANALOG) /* LCD_B1 */
+				  STM32_PINMUX('G', 10, ANALOG) /* LCD_B2 */
+				  STM32_PINMUX('D', 10, ANALOG) /* LCD_B3 */
+				  STM32_PINMUX('E', 12, ANALOG) /* LCD_B4 */
+				  STM32_PINMUX('A',  3, ANALOG) /* LCD_B5 */
+				  STM32_PINMUX('B',  8, ANALOG) /* LCD_B6 */
+				  STM32_PINMUX('D',  8, ANALOG) /* LCD_B7 */
+				>;
+		};
+	};
+
+	txmp_uart4_pins: txmp-uart4-pins {
+		pins1 {
+			pinmux = <STM32_PINMUX('G', 11, AF6)>; /* UART4_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
+			bias-disable;
+		};
+	};
+
+	txmp_uart4_sleep_pins: txmp-uart4-sleep-pins {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('G', 11, ANALOG) /* UART4_TX */
+				  STM32_PINMUX('B', 2, ANALOG) /* UART4_RX */
+			>;
+		};
+	};
+
+	txmp_uart4_rts_pins: txmp-uart4-rts-pins {
+		pins1 {
+			pinmux = <STM32_PINMUX('A', 15, AF8)>; /* UART4_RTS */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	txmp_uart4_rts_sleep_pins: txmp-uart4-rts-sleep-pins {
+		pins {
+			pinmux = <STM32_PINMUX('A', 15, ANALOG)>; /* UART4_RTS */
+		};
+	};
+
+	txmp_uart5_pins: txmp-uart5 {
+		pins1 {
+			pinmux = <
+				  STM32_PINMUX('C', 12, AF8) /* UART5_TX */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <
+				  STM32_PINMUX('D', 2, AF8) /* UART5_RX */
+			>;
+			bias-disable;
+		};
+	};
+
+	txmp_uart5_sleep_pins: txmp-uart5-sleep {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('C', 12, ANALOG) /* UART5_TX */
+				  STM32_PINMUX('D', 2, ANALOG) /* UART5_RX */
+			>;
+		};
+	};
+
+	txmp_uart5_rtscts_pins: txmp-uart5-rtscts {
+		pins1 {
+			pinmux = <STM32_PINMUX('C', 8, AF8)>; /* UART5_RTS */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('C', 9, AF8)>; /* UART5_CTS */
+			bias-disable;
+		};
+	};
+
+	txmp_uart5_rtscts_sleep_pins: txmp-uart5-rtscts-sleep {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('C', 8, ANALOG) /* UART5_RTS */
+				  STM32_PINMUX('C', 9, ANALOG) /* UART5_CTS */
+			>;
+		};
+	};
+
+	txmp_uart7_pins: uart7 {
+		pins1 {
+			pinmux = <STM32_PINMUX('E', 8, AF7)>; /* UART7_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 7, AF7)>; /* UART7_RX */
+			bias-disable;
+		};
+	};
+
+	txmp_uart7_sleep_pins: uart7-sleep {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('E', 8, ANALOG) /* UART7_TX */
+				  STM32_PINMUX('E', 7, ANALOG) /* UART7_RX */
+			>;
+		};
+	};
+
+	txmp_uart7_rtscts_pins: uart7-rtscts {
+		pins1 {
+			pinmux = <STM32_PINMUX('E', 9, AF7)>; /* UART7_RTS */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 10, AF7)>; /* UART7_CTS */
+			bias-disable;
+		};
+	};
+
+	txmp_uart7_rtscts_sleep_pins: uart7-rtscts-sleep {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('E', 8, ANALOG) /* UART7_TX */
+				  STM32_PINMUX('E', 7, ANALOG) /* UART7_RX */
+				  STM32_PINMUX('E', 9, ANALOG) /* UART7_RTS */
+				  STM32_PINMUX('E', 10, ANALOG) /* UART7_CTS */
+			>;
+		};
+	};
+};
Index: karo-tx-linux/arch/arm/boot/dts/stm32mp157c-qsmp-1570-qsbase1.dts
===================================================================
--- /dev/null
+++ karo-tx-linux/arch/arm/boot/dts/stm32mp157c-qsmp-1570-qsbase1.dts
@@ -0,0 +1,111 @@
+// SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause
+
+/dts-v1/;
+
+#include "stm32mp157c-qsmp-1570.dts"
+#include "stm32mp15-txmp-mb7.dtsi"
+
+/ {
+	model = "Ka-Ro electronics GmbH QSMP-1570 module on QSBASE1 baseboard";
+
+	/delete-node/ sound;
+};
+
+&gpu {
+	status = "okay";
+};
+
+&lcd_panel {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&qsmp_ltdc_pins>;
+	pinctrl-1 = <&qsmp_ltdc_pins_sleep>;
+	enable-gpios = <&gpioa 10 GPIO_ACTIVE_HIGH>;
+};
+
+&polytouch {
+	interrupt-parent = <&gpiod>;
+	interrupts = <12 IRQ_TYPE_EDGE_FALLING>;
+	/delete-property/ reset-gpios;
+	/delete-property/ wake-gpios;
+};
+
+&rtc_i2c {
+	status = "disabled";
+};
+
+&pinctrl {
+	qsmp_ltdc_pins: qsmp-ltdc-pins {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('G',  7, AF14) /* LCD_CLK */
+				  STM32_PINMUX('I', 10, AF14) /* LCD_HSYNC */
+				  STM32_PINMUX('I',  9, AF14) /* LCD_VSYNC */
+				  STM32_PINMUX('E', 13, AF14) /* LCD_DE */
+
+				  STM32_PINMUX('H',  2, AF14) /* LCD_R0 */
+				  STM32_PINMUX('H',  3, AF14) /* LCD_R1 */
+				  STM32_PINMUX('H',  8, AF14) /* LCD_R2 */
+				  STM32_PINMUX('H',  9, AF14) /* LCD_R3 */
+				  STM32_PINMUX('H', 10, AF14) /* LCD_R4 */
+				  STM32_PINMUX('H', 11, AF14) /* LCD_R5 */
+				  STM32_PINMUX('H', 12, AF14) /* LCD_R6 */
+				  STM32_PINMUX('E', 15, AF14) /* LCD_R7 */
+				  STM32_PINMUX('B',  1, AF14) /* LCD_G0 */
+				  STM32_PINMUX('E',  6, AF14) /* LCD_G1 */
+				  STM32_PINMUX('H', 13, AF14) /* LCD_G2 */
+				  STM32_PINMUX('H', 14, AF14) /* LCD_G3 */
+				  STM32_PINMUX('H', 15, AF14) /* LCD_G4 */
+				  STM32_PINMUX('I',  0, AF14) /* LCD_G5 */
+				  STM32_PINMUX('I',  1, AF14) /* LCD_G6 */
+				  STM32_PINMUX('I',  2, AF14) /* LCD_G7 */
+				  STM32_PINMUX('E',  4, AF14) /* LCD_B0 */
+				  STM32_PINMUX('G', 12, AF14) /* LCD_B1 */
+				  STM32_PINMUX('G', 10, AF14) /* LCD_B2 */
+				  STM32_PINMUX('D', 10, AF14) /* LCD_B3 */
+				  STM32_PINMUX('I',  4, AF14) /* LCD_B4 */
+				  STM32_PINMUX('I',  5, AF14) /* LCD_B5 */
+				  STM32_PINMUX('I',  6, AF14) /* LCD_B6 */
+				  STM32_PINMUX('D',  8, AF14) /* LCD_B7 */
+			>;
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	qsmp_ltdc_pins_sleep: qsmp-lcd-pins-sleep {
+		pins {
+			pinmux = <
+				  STM32_PINMUX('G',  7, ANALOG) /* LCD_CLK */
+				  STM32_PINMUX('I', 10, ANALOG) /* LCD_HSYNC */
+				  STM32_PINMUX('I',  9, ANALOG) /* LCD_VSYNC */
+				  STM32_PINMUX('E', 13, ANALOG) /* LCD_DE */
+
+				  STM32_PINMUX('H',  2, ANALOG) /* LCD_R0 */
+				  STM32_PINMUX('H',  3, ANALOG) /* LCD_R1 */
+				  STM32_PINMUX('H',  8, ANALOG) /* LCD_R2 */
+				  STM32_PINMUX('H',  9, ANALOG) /* LCD_R3 */
+				  STM32_PINMUX('H', 10, ANALOG) /* LCD_R4 */
+				  STM32_PINMUX('H', 11, ANALOG) /* LCD_R5 */
+				  STM32_PINMUX('H', 12, ANALOG) /* LCD_R6 */
+				  STM32_PINMUX('E', 15, ANALOG) /* LCD_R7 */
+				  STM32_PINMUX('B',  1, ANALOG) /* LCD_G0 */
+				  STM32_PINMUX('E',  6, ANALOG) /* LCD_G1 */
+				  STM32_PINMUX('H', 13, ANALOG) /* LCD_G2 */
+				  STM32_PINMUX('H', 14, ANALOG) /* LCD_G3 */
+				  STM32_PINMUX('H', 15, ANALOG) /* LCD_G4 */
+				  STM32_PINMUX('I',  0, ANALOG) /* LCD_G5 */
+				  STM32_PINMUX('I',  1, ANALOG) /* LCD_G6 */
+				  STM32_PINMUX('I',  2, ANALOG) /* LCD_G7 */
+				  STM32_PINMUX('E',  4, ANALOG) /* LCD_B0 */
+				  STM32_PINMUX('G', 12, ANALOG) /* LCD_B1 */
+				  STM32_PINMUX('G', 10, ANALOG) /* LCD_B2 */
+				  STM32_PINMUX('D', 10, ANALOG) /* LCD_B3 */
+				  STM32_PINMUX('I',  4, ANALOG) /* LCD_B4 */
+				  STM32_PINMUX('I',  5, ANALOG) /* LCD_B5 */
+				  STM32_PINMUX('I',  6, ANALOG) /* LCD_B6 */
+				  STM32_PINMUX('D',  8, ANALOG) /* LCD_B7 */
+			>;
+		};
+	};
+};
Index: karo-tx-linux/arch/arm/configs/txmp_defconfig
===================================================================
--- /dev/null
+++ karo-tx-linux/arch/arm/configs/txmp_defconfig
@@ -0,0 +1,382 @@
+CONFIG_SYSVIPC=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_USELIB=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_PREEMPT=y
+CONFIG_TASKSTATS=y
+CONFIG_TASK_DELAY_ACCT=y
+CONFIG_TASK_XACCT=y
+CONFIG_TASK_IO_ACCOUNTING=y
+CONFIG_IKCONFIG=y
+CONFIG_IKCONFIG_PROC=y
+CONFIG_CGROUPS=y
+CONFIG_MEMCG=y
+CONFIG_BLK_CGROUP=y
+CONFIG_CGROUP_SCHED=y
+CONFIG_CFS_BANDWIDTH=y
+CONFIG_CGROUP_FREEZER=y
+CONFIG_CPUSETS=y
+CONFIG_CGROUP_DEVICE=y
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_CGROUP_BPF=y
+CONFIG_NAMESPACES=y
+CONFIG_USER_NS=y
+CONFIG_CHECKPOINT_RESTORE=y
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_KALLSYMS_ALL=y
+CONFIG_BPF_SYSCALL=y
+CONFIG_EMBEDDED=y
+CONFIG_PROFILING=y
+CONFIG_ARCH_STM32=y
+CONFIG_ARM_THUMBEE=y
+# CONFIG_CACHE_L2X0 is not set
+CONFIG_ARM_ERRATA_430973=y
+CONFIG_ARM_ERRATA_720789=y
+CONFIG_ARM_ERRATA_754322=y
+CONFIG_ARM_ERRATA_754327=y
+CONFIG_ARM_ERRATA_764369=y
+CONFIG_ARM_ERRATA_775420=y
+CONFIG_PCI_ENDPOINT=y
+CONFIG_PCI_ENDPOINT_CONFIGFS=y
+CONFIG_SMP=y
+CONFIG_MCPM=y
+CONFIG_HIGHMEM=y
+CONFIG_FORCE_MAX_ZONEORDER=12
+CONFIG_SECCOMP=y
+# CONFIG_ATAGS is not set
+CONFIG_ZBOOT_ROM_TEXT=0x0
+CONFIG_ZBOOT_ROM_BSS=0x0
+CONFIG_VFP=y
+CONFIG_NEON=y
+CONFIG_KERNEL_MODE_NEON=y
+CONFIG_MODULES=y
+CONFIG_MODULE_FORCE_LOAD=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_MODVERSIONS=y
+CONFIG_PARTITION_ADVANCED=y
+CONFIG_CMDLINE_PARTITION=y
+CONFIG_CMA=y
+CONFIG_NET=y
+CONFIG_PACKET=y
+CONFIG_UNIX=y
+CONFIG_INET=y
+CONFIG_IP_PNP=y
+CONFIG_IP_PNP_DHCP=y
+CONFIG_IP_PNP_BOOTP=y
+CONFIG_SYN_COOKIES=y
+# CONFIG_INET_XFRM_MODE_TRANSPORT is not set
+# CONFIG_INET_XFRM_MODE_TUNNEL is not set
+# CONFIG_INET_XFRM_MODE_BEET is not set
+# CONFIG_INET_DIAG is not set
+# CONFIG_IPV6 is not set
+CONFIG_CAN=y
+# CONFIG_CAN_GW is not set
+CONFIG_CAN_DEBUG_DEVICES=y
+# CONFIG_WIRELESS is not set
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+CONFIG_DMA_CMA=y
+CONFIG_CMA_SIZE_MBYTES=128
+CONFIG_BRCMSTB_GISB_ARB=y
+CONFIG_SIMPLE_PM_BUS=y
+CONFIG_VEXPRESS_CONFIG=y
+CONFIG_MTD=y
+CONFIG_MTD_CMDLINE_PARTS=y
+CONFIG_MTD_BLOCK=y
+CONFIG_MTD_M25P80=y
+CONFIG_MTD_SPI_NOR=y
+# CONFIG_MTD_SPI_NOR_USE_4K_SECTORS is not set
+CONFIG_SPI_STM32_QUADSPI=y
+CONFIG_MTD_UBI=y
+CONFIG_OF_OVERLAY=y
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_RAM=y
+CONFIG_BLK_DEV_RAM_SIZE=65536
+CONFIG_SRAM=y
+# CONFIG_VEXPRESS_SYSCFG is not set
+CONFIG_EEPROM_AT24=y
+CONFIG_EEPROM_93CX6=y
+CONFIG_SCSI=y
+CONFIG_BLK_DEV_SD=y
+CONFIG_BLK_DEV_SR=y
+CONFIG_CHR_DEV_SG=y
+CONFIG_NETDEVICES=y
+# CONFIG_NET_VENDOR_ALACRITECH is not set
+# CONFIG_NET_VENDOR_AMAZON is not set
+# CONFIG_NET_VENDOR_AQUANTIA is not set
+# CONFIG_NET_VENDOR_ARC is not set
+# CONFIG_NET_VENDOR_AURORA is not set
+# CONFIG_NET_VENDOR_BROADCOM is not set
+# CONFIG_NET_VENDOR_CADENCE is not set
+# CONFIG_NET_VENDOR_CAVIUM is not set
+# CONFIG_NET_VENDOR_CIRRUS is not set
+# CONFIG_NET_VENDOR_CORTINA is not set
+# CONFIG_NET_VENDOR_EZCHIP is not set
+# CONFIG_NET_VENDOR_FARADAY is not set
+# CONFIG_NET_VENDOR_HISILICON is not set
+# CONFIG_NET_VENDOR_HUAWEI is not set
+# CONFIG_NET_VENDOR_INTEL is not set
+# CONFIG_NET_VENDOR_MARVELL is not set
+# CONFIG_NET_VENDOR_MELLANOX is not set
+# CONFIG_NET_VENDOR_MICREL is not set
+# CONFIG_NET_VENDOR_MICROCHIP is not set
+# CONFIG_NET_VENDOR_MICROSEMI is not set
+# CONFIG_NET_VENDOR_NATSEMI is not set
+# CONFIG_NET_VENDOR_NETRONOME is not set
+# CONFIG_NET_VENDOR_NI is not set
+# CONFIG_NET_VENDOR_QUALCOMM is not set
+# CONFIG_NET_VENDOR_RENESAS is not set
+# CONFIG_NET_VENDOR_ROCKER is not set
+# CONFIG_NET_VENDOR_SAMSUNG is not set
+# CONFIG_NET_VENDOR_SEEQ is not set
+# CONFIG_NET_VENDOR_SOLARFLARE is not set
+# CONFIG_NET_VENDOR_SMSC is not set
+# CONFIG_NET_VENDOR_SOCIONEXT is not set
+CONFIG_STMMAC_ETH=y
+# CONFIG_NET_VENDOR_SYNOPSYS is not set
+# CONFIG_NET_VENDOR_VIA is not set
+# CONFIG_NET_VENDOR_WIZNET is not set
+CONFIG_MICREL_PHY=y
+CONFIG_SMSC_PHY=y
+# CONFIG_USB_NET_DRIVERS is not set
+# CONFIG_WLAN is not set
+CONFIG_INPUT_EVDEV=y
+CONFIG_INPUT_EVBUG=m
+# CONFIG_KEYBOARD_ATKBD is not set
+CONFIG_KEYBOARD_GPIO=y
+CONFIG_KEYBOARD_MATRIX=y
+# CONFIG_INPUT_MOUSE is not set
+CONFIG_INPUT_TOUCHSCREEN=y
+CONFIG_TOUCHSCREEN_EDT_FT5X06=y
+CONFIG_TOUCHSCREEN_USB_COMPOSITE=y
+# CONFIG_TOUCHSCREEN_USB_PANJIT is not set
+# CONFIG_TOUCHSCREEN_USB_3M is not set
+# CONFIG_TOUCHSCREEN_USB_ITM is not set
+# CONFIG_TOUCHSCREEN_USB_GUNZE is not set
+# CONFIG_TOUCHSCREEN_USB_DMC_TSC10 is not set
+# CONFIG_TOUCHSCREEN_USB_IRTOUCH is not set
+# CONFIG_TOUCHSCREEN_USB_IDEALTEK is not set
+# CONFIG_TOUCHSCREEN_USB_GENERAL_TOUCH is not set
+# CONFIG_TOUCHSCREEN_USB_GOTOP is not set
+# CONFIG_TOUCHSCREEN_USB_JASTEC is not set
+# CONFIG_TOUCHSCREEN_USB_ELO is not set
+# CONFIG_TOUCHSCREEN_USB_E2I is not set
+# CONFIG_TOUCHSCREEN_USB_ZYTRONIC is not set
+# CONFIG_TOUCHSCREEN_USB_ETT_TC45USB is not set
+# CONFIG_TOUCHSCREEN_USB_NEXIO is not set
+# CONFIG_TOUCHSCREEN_USB_EASYTOUCH is not set
+# CONFIG_SERIO is not set
+# CONFIG_VT_CONSOLE is not set
+CONFIG_LEGACY_PTY_COUNT=16
+CONFIG_SERIAL_STM32=y
+CONFIG_SERIAL_STM32_CONSOLE=y
+CONFIG_HW_RANDOM=y
+# CONFIG_I2C_COMPAT is not set
+CONFIG_I2C_CHARDEV=y
+CONFIG_I2C_STM32F7=y
+CONFIG_I2C_DEBUG_CORE=y
+CONFIG_I2C_DEBUG_ALGO=y
+CONFIG_I2C_DEBUG_BUS=y
+CONFIG_SPI=y
+CONFIG_SPI_GPIO=y
+CONFIG_SPI_STM32=y
+CONFIG_SPI_STM32_QSPI=y
+CONFIG_SPI_SPIDEV=y
+CONFIG_DEBUG_PINCTRL=y
+CONFIG_PINCTRL_SINGLE=y
+CONFIG_DEBUG_GPIO=y
+CONFIG_GPIO_GENERIC_PLATFORM=y
+CONFIG_GPIO_SYSCON=y
+CONFIG_POWER_RESET=y
+CONFIG_POWER_RESET_GPIO=y
+CONFIG_POWER_RESET_GPIO_RESTART=y
+CONFIG_POWER_RESET_SYSCON=y
+CONFIG_POWER_RESET_SYSCON_POWEROFF=y
+CONFIG_SYSCON_REBOOT_MODE=y
+# CONFIG_HWMON is not set
+CONFIG_THERMAL=y
+CONFIG_THERMAL_WRITABLE_TRIPS=y
+CONFIG_THERMAL_GOV_FAIR_SHARE=y
+CONFIG_THERMAL_GOV_USER_SPACE=y
+CONFIG_THERMAL_EMULATION=y
+CONFIG_WATCHDOG=y
+CONFIG_WATCHDOG_NOWAYOUT=y
+CONFIG_MFD_STM32_LPTIMER=y
+# CONFIG_MFD_VEXPRESS_SYSREG is not set
+CONFIG_REGULATOR=y
+CONFIG_REGULATOR_FIXED_VOLTAGE=y
+CONFIG_REGULATOR_STM32_VREFBUF=y
+CONFIG_REGULATOR_STM32_PWR=y
+CONFIG_DRM=y
+CONFIG_DRM_STM=y
+CONFIG_DRM_STM_DSI=y
+CONFIG_DRM_PANEL_SIMPLE=y
+CONFIG_FB_MODE_HELPERS=y
+CONFIG_FB_SIMPLE=y
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+# CONFIG_LCD_CLASS_DEVICE is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+# CONFIG_BACKLIGHT_GENERIC is not set
+CONFIG_BACKLIGHT_PWM=y
+CONFIG_BACKLIGHT_GPIO=y
+CONFIG_FRAMEBUFFER_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE_ROTATION=y
+CONFIG_LOGO=y
+CONFIG_SOUND=y
+CONFIG_SND=y
+CONFIG_SND_HRTIMER=y
+# CONFIG_SND_SUPPORT_OLD_API is not set
+CONFIG_SND_VERBOSE_PRINTK=y
+CONFIG_SND_DEBUG=y
+CONFIG_SND_DEBUG_VERBOSE=y
+CONFIG_SND_PCM_XRUN_DEBUG=y
+# CONFIG_SND_DRIVERS is not set
+# CONFIG_SND_ARM is not set
+# CONFIG_SND_SPI is not set
+# CONFIG_SND_USB is not set
+CONFIG_SND_SOC=y
+CONFIG_SND_SOC_STM32_SAI=y
+CONFIG_SND_SOC_SGTL5000=y
+CONFIG_SND_SIMPLE_CARD=y
+CONFIG_SND_AUDIO_GRAPH_CARD=y
+CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+CONFIG_USB_LEDS_TRIGGER_USBPORT=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+CONFIG_USB_EHCI_HCD_PLATFORM=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_DWC2=y
+CONFIG_USB_DWC2_DEBUG=y
+CONFIG_USB_DWC2_VERBOSE=y
+# CONFIG_USB_DWC2_DEBUG_PERIODIC is not set
+CONFIG_USB_SERIAL=y
+CONFIG_USB_SERIAL_GENERIC=y
+CONFIG_USB_SERIAL_BELKIN=y
+CONFIG_USB_SERIAL_FTDI_SIO=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_DEBUG=y
+CONFIG_USB_GADGET_VERBOSE=y
+CONFIG_USB_GADGET_DEBUG_FILES=y
+CONFIG_USB_GADGET_DEBUG_FS=y
+CONFIG_USB_GADGET_VBUS_DRAW=200
+CONFIG_USB_SNP_UDC_PLAT=y
+CONFIG_USB_CONFIGFS=y
+CONFIG_USB_CONFIGFS_SERIAL=y
+CONFIG_USB_CONFIGFS_ACM=y
+CONFIG_USB_CONFIGFS_OBEX=y
+CONFIG_USB_CONFIGFS_NCM=y
+CONFIG_USB_CONFIGFS_ECM=y
+CONFIG_USB_CONFIGFS_ECM_SUBSET=y
+CONFIG_USB_CONFIGFS_RNDIS=y
+CONFIG_USB_CONFIGFS_EEM=y
+CONFIG_USB_CONFIGFS_MASS_STORAGE=y
+CONFIG_USB_CONFIGFS_F_LB_SS=y
+CONFIG_USB_CONFIGFS_F_FS=y
+CONFIG_USB_CONFIGFS_F_HID=y
+CONFIG_USB_CONFIGFS_F_PRINTER=y
+CONFIG_MMC=y
+CONFIG_MMC_BLOCK_MINORS=16
+CONFIG_MMC_DEBUG=y
+CONFIG_MMC_ARMMMCI=y
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_PLTFM=y
+CONFIG_MMC_DW=y
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=y
+CONFIG_LEDS_CLASS_FLASH=y
+CONFIG_LEDS_GPIO=y
+CONFIG_LEDS_PWM=y
+CONFIG_LEDS_TRIGGERS=y
+CONFIG_LEDS_TRIGGER_TIMER=y
+CONFIG_LEDS_TRIGGER_ONESHOT=y
+CONFIG_LEDS_TRIGGER_HEARTBEAT=y
+CONFIG_LEDS_TRIGGER_BACKLIGHT=y
+CONFIG_LEDS_TRIGGER_CPU=y
+CONFIG_LEDS_TRIGGER_GPIO=y
+CONFIG_LEDS_TRIGGER_DEFAULT_ON=y
+CONFIG_LEDS_TRIGGER_TRANSIENT=y
+CONFIG_LEDS_TRIGGER_CAMERA=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_DRV_DS1307=y
+CONFIG_RTC_DRV_DS1307_CENTURY=y
+CONFIG_RTC_DRV_STM32=y
+CONFIG_DMADEVICES=y
+CONFIG_STM32_DMA=y
+CONFIG_STM32_DMAMUX=y
+CONFIG_STM32_MDMA=y
+CONFIG_DW_DMAC=y
+# CONFIG_VIRTIO_MENU is not set
+CONFIG_HWSPINLOCK=y
+CONFIG_HWSPINLOCK_STM32=y
+CONFIG_MAILBOX=y
+CONFIG_STM32_IPCC=y
+# CONFIG_IOMMU_SUPPORT is not set
+CONFIG_IIO=y
+CONFIG_IIO_BUFFER_CB=y
+CONFIG_IIO_BUFFER_HW_CONSUMER=y
+CONFIG_IIO_SW_TRIGGER=y
+CONFIG_SD_ADC_MODULATOR=y
+CONFIG_STM32_ADC_CORE=y
+CONFIG_STM32_ADC=y
+CONFIG_STM32_ADC_TEMP=y
+CONFIG_STM32_LPTIMER_CNT=y
+CONFIG_STM32_DAC=y
+CONFIG_IIO_HRTIMER_TRIGGER=y
+CONFIG_IIO_STM32_LPTIMER_TRIGGER=y
+CONFIG_PWM=y
+CONFIG_PWM_STM32=y
+CONFIG_PWM_STM32_LP=y
+CONFIG_PHY_STM32_USBPHYC=y
+# CONFIG_ARM_PMU is not set
+CONFIG_NVMEM_STM32_ROMEM=y
+CONFIG_EXT4_FS=y
+CONFIG_EXT4_FS_POSIX_ACL=y
+CONFIG_MSDOS_FS=y
+CONFIG_VFAT_FS=y
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_UBIFS_FS=y
+CONFIG_NFS_FS=y
+CONFIG_NFS_V3_ACL=y
+CONFIG_NFS_V4=y
+CONFIG_ROOT_NFS=y
+CONFIG_NLS_DEFAULT="utf-8"
+CONFIG_NLS_CODEPAGE_437=y
+CONFIG_NLS_ISO8859_1=y
+CONFIG_NLS_ISO8859_15=y
+CONFIG_NLS_UTF8=y
+# CONFIG_CRYPTO_ECHAINIV is not set
+# CONFIG_CRYPTO_HW is not set
+# CONFIG_XZ_DEC_X86 is not set
+# CONFIG_XZ_DEC_POWERPC is not set
+# CONFIG_XZ_DEC_IA64 is not set
+# CONFIG_XZ_DEC_ARM is not set
+# CONFIG_XZ_DEC_ARMTHUMB is not set
+# CONFIG_XZ_DEC_SPARC is not set
+CONFIG_PRINTK_TIME=y
+CONFIG_DYNAMIC_DEBUG=y
+CONFIG_STRIP_ASM_SYMS=y
+CONFIG_DEBUG_FS=y
+# CONFIG_SECTION_MISMATCH_WARN_ONLY is not set
+CONFIG_MAGIC_SYSRQ=y
+CONFIG_DEBUG_SHIRQ=y
+CONFIG_SOFTLOCKUP_DETECTOR=y
+CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC=y
+CONFIG_BOOTPARAM_HUNG_TASK_PANIC=y
+CONFIG_WQ_WATCHDOG=y
+CONFIG_PANIC_ON_OOPS=y
+CONFIG_PANIC_TIMEOUT=-1
+# CONFIG_SCHED_DEBUG is not set
+# CONFIG_DEBUG_PREEMPT is not set
+CONFIG_STACKTRACE=y
+CONFIG_DEBUG_BLOCK_EXT_DEVT=y
+# CONFIG_FTRACE is not set
+CONFIG_DMA_API_DEBUG=y
+# CONFIG_DMA_API_DEBUG_SG is not set
+# CONFIG_RUNTIME_TESTING_MENU is not set
+CONFIG_DEBUG_WX=y
+CONFIG_DEBUG_USER=y
+CONFIG_DEBUG_LL=y
+CONFIG_DEBUG_UNCOMPRESS=y
+CONFIG_EARLY_PRINTK=y
Index: karo-tx-linux/arch/arm/boot/dts/stm32mp15-txmp-mb7.dtsi
===================================================================
--- /dev/null
+++ karo-tx-linux/arch/arm/boot/dts/stm32mp15-txmp-mb7.dtsi
@@ -0,0 +1,188 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+
+/ {
+	aliases {
+		display = &lcd_panel;
+	};
+
+	clocks {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		mclk: clock@0 {
+			compatible = "fixed-clock";
+			#clock-cells = <0>;
+			reg = <0>;
+			clock-frequency = <26000000>;
+		};
+	};
+
+	lcd_panel: panel {
+		compatible = "edt,etm0700g0dh6";
+		backlight = <&lcd_backlight>;
+		power-supply = <&reg_3v3>;
+		status = "okay";
+
+		port {
+			panel_in: endpoint {
+				remote-endpoint = <&ltdc_ep1_out>;
+			};
+		};
+
+		display-timings {
+			native-mode = <&ETV570>;
+
+			VGA: VGA {
+				clock-frequency = <25200000>;
+				hactive = <640>;
+				vactive = <480>;
+				hback-porch = <48>;
+				hsync-len = <96>;
+				hfront-porch = <16>;
+				vback-porch = <31>;
+				vsync-len = <2>;
+				vfront-porch = <12>;
+				hsync-active = <0>;
+				vsync-active = <0>;
+				de-active = <1>;
+				pixelclk-active = <0>;
+			};
+
+			ETV570: ETV570 {
+				u-boot,panel-name = "edt,et057090dhu";
+				clock-frequency = <25200000>;
+				hactive = <640>;
+				vactive = <480>;
+				hback-porch = <114>;
+				hsync-len = <30>;
+				hfront-porch = <16>;
+				vback-porch = <32>;
+				vsync-len = <3>;
+				vfront-porch = <10>;
+				hsync-active = <0>;
+				vsync-active = <0>;
+				de-active = <1>;
+				pixelclk-active = <1>;
+			};
+
+			ET0350: ET0350 {
+				u-boot,panel-name = "edt,et0350g0dh6";
+				clock-frequency = <6413760>;
+				hactive = <320>;
+				vactive = <240>;
+				hback-porch = <34>;
+				hsync-len = <34>;
+				hfront-porch = <20>;
+				vback-porch = <15>;
+				vsync-len = <3>;
+				vfront-porch = <4>;
+				hsync-active = <0>;
+				vsync-active = <0>;
+				de-active = <1>;
+				pixelclk-active = <0>;
+			};
+
+			ET0430: ET0430 {
+				u-boot,panel-name = "edt,et0430g0dh6";
+				clock-frequency = <9009000>;
+				hactive = <480>;
+				vactive = <272>;
+				hback-porch = <2>;
+				hsync-len = <41>;
+				hfront-porch = <2>;
+				vback-porch = <2>;
+				vsync-len = <10>;
+				vfront-porch = <2>;
+				hsync-active = <0>;
+				vsync-active = <0>;
+				de-active = <1>;
+				pixelclk-active = <1>;
+			};
+
+			ET0500: ET0500 {
+				clock-frequency = <33264000>;
+				hactive = <800>;
+				vactive = <480>;
+				hback-porch = <88>;
+				hsync-len = <128>;
+				hfront-porch = <40>;
+				vback-porch = <33>;
+				vsync-len = <2>;
+				vfront-porch = <10>;
+				hsync-active = <0>;
+				vsync-active = <0>;
+				de-active = <1>;
+				pixelclk-active = <0>;
+			};
+
+			ET0700: ET0700 { /* same as ET0500 */
+				u-boot,panel-name = "edt,etm0700g0dh6";
+				clock-frequency = <33264000>;
+				hactive = <800>;
+				vactive = <480>;
+				hback-porch = <88>;
+				hsync-len = <128>;
+				hfront-porch = <40>;
+				vback-porch = <33>;
+				vsync-len = <2>;
+				vfront-porch = <10>;
+				hsync-active = <0>;
+				vsync-active = <0>;
+				de-active = <1>;
+				pixelclk-active = <0>;
+			};
+
+			ETQ570: ETQ570 {
+				clock-frequency = <6596040>;
+				hactive = <320>;
+				vactive = <240>;
+				hback-porch = <38>;
+				hsync-len = <30>;
+				hfront-porch = <30>;
+				vback-porch = <16>;
+				vsync-len = <3>;
+				vfront-porch = <4>;
+				hsync-active = <0>;
+				vsync-active = <0>;
+				de-active = <1>;
+				pixelclk-active = <0>;
+			};
+		};
+	};
+
+};
+
+&i2c5 {
+	status = "okay";
+
+	polytouch: edt-ft5x06@38 {
+		compatible = "edt,edt-ft5x06";
+		reg = <0x38>;
+		interrupt-parent = <&gpioe>;
+		interrupts = <0 IRQ_TYPE_EDGE_FALLING>;
+		reset-gpios = <&gpiod 14 GPIO_ACTIVE_LOW>; /* Pin 149 */
+		wake-gpios = <&gpioe 2 GPIO_ACTIVE_HIGH>; /* Pin 152 */
+		wakeup-source;
+		status = "okay";
+	};
+
+	rtc_i2c: mcp7940x@6f {
+		compatible = "microchip,mcp7940x";
+		reg = <0x6f>;
+		status = "okay";
+	};
+};
+
+&ltdc {
+	status = "okay";
+
+	port {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ltdc_ep1_out: endpoint@1 {
+			reg = <1>;
+			remote-endpoint = <&panel_in>;
+		};
+	};
+};
